{"version":3,"sources":["AppFonts.js","gruvbox.js","ti_colors.js","ColorScheme.js","components/Pane.js","components/Tile.js","components/ReactRangeSlider.js","components/ThemedInput.js","components/Slider.js","components/PingSubmit.js","components/CheckBox.js","components/PingConfig.js","components/ArcBar.js","components/AtAGlance.js","icons/log_icon.svg","icons/health_icon.svg","icons/delay_icon.svg","components/Tooltip.js","components/MagnitudeIndicator.js","icons/download_icon.svg","utils.js","components/FlexTable.js","components/PingLog.js","components/DelayMonitor.js","components/BarChart.js","components/PieChart.js","components/ErrorRateLineChart.js","components/HealthMonitor.js","components/Monitor.js","components/StatusIndicator.js","components/IPAddressTable.js","components/Topology.js","icons/day_icon.svg","icons/night_icon.svg","components/ThemeToggle.js","components/SettingsButton.js","components/PingJobMonitor.js","components/PingJobsButton.js","App.js","index.js"],"names":["app_fonts","font","fontWeight","color","gruvbox_colors","color_scheme","bg","bg0h","bg0","bg1","bg2","bg3","bg4","fg0","white","red","green","yellow","blue","purple","aqua","gray","orange","ti_color_scheme","red_dark","gray_light","THEME","TI","GRUVBOX","Object","freeze","ThemeContext","createContext","ColorScheme","color_maps","gruvbox","gruvbox_color_theme","ti","ti_color_theme","get_color","name","theme","this","get_color_with_opacity","opacity","hexcolor","r","parseInt","substring","g","b","Pane","props","style","backgroundColor","useContext","className","children","TileHeader","title_style","title","Tile","surface_style","borderTop","boxShadow","borderRadius","Fragment","omit_header","capitalize","str","charAt","toUpperCase","substr","clamp","value","min","max","Math","constants","orientation","horizontal","dimension","direction","reverseDirection","coordinate","vertical","Slider","context","handleFormat","format","handleUpdate","slider","sliderPos","handlePos","handle","setState","limit","grab","handleStart","e","onChangeStart","document","addEventListener","handleDrag","handleEnd","active","stopPropagation","onChange","target","classList","dataset","position","contains","parseFloat","onChangeComplete","removeEventListener","handleKeyDown","preventDefault","sliderValue","keyCode","step","getPositionFromValue","state","percentage","round","getValueFromPosition","pos","baseVal","reverse","node","coordinateStyle","directionStyle","clientCoordinateStyle","touches","getBoundingClientRect","coordinates","fill","label","renderLabels","labels","ref","sl","label_container_style","ResizeObserver","observe","tooltip","handleLabel","coords","fillStyle","assign","fill_style","handleStyle","handle_style","showTooltip","labelItems","labelKeys","keys","length","sort","a","key","labelPosition","labelCoords","labelStyle","push","onMouseDown","onTouchStart","onTouchEnd","s","onMouseUp","rail_style","sh","onTouchMove","onKeyDown","tabIndex","st","tooltip_style","Component","defaultProps","ThemedInput","input_style","background","concat","type","spellCheck","String","textChangeHandler","event","val","test","changeHandler","value_change_handler","slider_container_ref","React","createRef","progress_color","handle_radius","main_border_radius","cursor","top","transform","width","slider_height","height","border","display","ReactRangeSlider","contextType","PingSubmit","useState","isHovering","setHoverState","isClicked","setClickState","blue_25","blue_75","submit_style","flexDirection","justifyContent","alignItems","submit_hover_style","submit_click_style","mergeStyles","original","additions","onMouseEnter","onMouseLeave","onClick","setTimeout","click_handler","CheckBox","bg_style","fg_style","is_checked","NumberOfPackets","isInfinite","setIsInfinite","lastKnownFiniteNumPackets","useRef","num_packets","fontSize","newVal","current","marginLeft","PingConfiguration","send_pingburst","destination_ip","pingburst_request","id","request_opts","method","headers","Accept","mode","JSON","stringify","fetch","URL","ping_api_location","catch","err","console","log","destination_ips","ip_address_info_array","ip_info","is_selected","ip_address","forEach","ip","parameter_change_handler","timeout","interval","packet_size","ArcBar","label_color","sub_label_color","lineCapType","isShadow","bigger_better_thresholds","bigger_worse_thresholds","thresholds","is_bigger_better","threshold","percentFull","total_arc_length","stroke_dash","strokeDasharray","strokeDashoffset","viewBox","xmlns","filter","stroke","d","strokeWidth","strokeLinecap","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","values","stdDeviation","in2","operator","valueText","valueDescription","minLabel","maxLabel","AtAGlance","pingbursts","success_counter","packet_counter","duration_sum","success_sum","pingburst","records","record","was_success","duration","average_duration","success_rate","duration_percent","overall_metric","grade","grade_style","toFixed","floor","TooltipPortal","loc","left","transformOrigin","paddingLeft","paddingRight","reactDom","createPortal","content","body","Tooltip","localRef","setLeft","setTop","shown","setShown","useEffect","boundingRect","currentLeft","currentTop","window","scrollY","MagnitudeIndicator","foreground_color","background_style","marginRight","overflow","threshold_val","foreground_style","right","motion","div","animate","transition","initial","scrollbar_width","inner","createElement","outer","visibility","appendChild","w1","offsetWidth","w2","clientWidth","removeChild","getScrollBarWidth","compareObjects","o","p","mergeObjectsInPlace","source","assert","Array","common_length","i","mergeSubEntity","slice","splice","t_key","s_key","t_keys_to_remove","s_val","s_val_type","timestamp_string_to_date","timestamp","date_regex_matches","match","error","date_without_ms","ms","converted_date","Date","setMilliseconds","HeaderDatum","refContainer","ro","entries","newWidth","widthCallback","disconnect","headerValue","FlexTable","table_format","map","columnWidths","setColumnWidths","body_bg_color","header_fg_color","header_bg_color","body_fg_color","table_box_shadow","row_rule_color","main_table_style","width_callback_generator","index","produce","draft","table_headers","col_format","data_to_elements_mapper","dataToElementsMapper","total_columns","itemData","scrollbarVisible","setScrollbarVisible","outerRef","element","newScrollbarVisible","scrollHeight","clientHeight","borderTopLeftRadius","borderTopRightRadius","rowHeight","numVisibleRows","itemCount","itemSize","itemKey","rowKeyGenerator","overscanCount","row_props","elements","wrapped_elems","ele","datum_style","body_row_style","borderBottom","pingDataToElementsMapper","data","ping_info","start","get_ip_address_info_by_ip","dest_ip","burst_id","nickname","PingLog","download_url","alt","open","src","download_icon","flexBasis","flexGrow","row_data","burst","startDate","datum","tableProps","NetworkDelayChart","series_paths","aspect_ratio","viewportHeight","viewportWidth","margin","bottom","x_axis_ref","y_axis_ref","x_gridlines_ref","y_gridlines_ref","x_scale","d3","range","y_scale","x_axis","scale","ticks","every","x_gridlines","tickSize","tickFormat","y_axis","y_gridlines","lineGenerator","defined","call","text_color","grid_color","available_line_colors","color_name","series_array","info","ip_series","setMinutes","getMinutes","finish","series","domain","all_y_maxes","d_string","lines","path","legend_elements","side","textAnchor","dx","dy","preserveAspectRatio","DelayMonitor","marginTop","marginBottom","BarChart","results_map","results_array","color_map","category_color_map","average_success","health_category","borderColor","datasets","borderWidth","options","plugins","text","align","size","weight","family","legend","maintainAspectRatio","scales","beginAtZero","grid","PieChart","category_map","Map","constructCategory","filtered_results","set","HEALTH_CATEGORY","URGENT","POOR","FAIR","GOOD","category","ErrorRateLineChart","movingAveragelineGenerator","curve","movingAverage","cumulativeAveragelineGenerator","cumulativeAverage","cumulative_average","datumWasSuccessNum","array","lowerBound","upperBound","from","reduce","acc","cur","cum_ave_d_string","mov_ave_d_string","success_rate_to_category","HealthMonitor","pingburst_average_success","ip_health_info","has","health_info","get","pingburst_num_samples","num_samples","category_color_name_map","gap","MONITOR_STATE","LOG","HEALTH","DELAY","Monitor","monitor_state","current_display","monitor_tab_button_style","log_icon","health_icon","delay_icon","StatusIndicator","is_good_status","border_color","ipDataToElementsMapper","ip_table_rows","ip_row","ip_address_max_width","ip_address_style","ip_selection_handler","is_connected","IPAddressTable","all_ips_selected","table_rows","ip_address_info","rows","cytoscape","use","dagre","Topology","layout","ti_gray","ti_blue","ti_red","previous_theme","ti_stylesheet","selector","gruvbox_blue","gruvbox_orange","gruvbox_stylesheet","cy","on","_evt","run","ip_info_array","unnormalized_elements","nodes","selected","find","edges","CytoscapeComponent","normalizeElements","stylesheet","wheelSensitivity","NightIcon","DayIcon","cx","ThemeToggle","is_ti_themed","undefined","displayElement","slider_background","new_is_ti_themed","handle_new_theme","SettingsButton","is_hovering","set_hover_state","fontFamily","svg","whileTap","rotate","fillRule","clipRule","alignSelf","userSelect","change_handler","abortPingJob","endpoint","url","res","json","res_json","pingJobToElementsMapper","pingJobs","job","num_packets_remaining","CloseButton","is_light","closeHandler","CloseIcon","strokeLinejoin","setHovering","is_active","PingJobMonitor","has_completed","Number","num_packets_requested","was_aborted","ping_jobs","abortAllPingJobs","PingJobsButton","active_class","bg_color","join","rx","AnimatePresence","nickname_generator","seed","nicknames","App","change_ping_api_location_handler","topology","unique_ips_seen","getElementsByTagName","boxSizing","setInterval","update_pingbursts","update_topology_and_ip_address_info_array","ok","Error","debug","fetch_api_endpoint","new_topology","old_topology","difference","setA","setB","_difference","Set","elem","delete","old_ips","ip_set","add","new_ips","ips_to_add","ips_to_remove","calc_diff_ips","ips_to_add_array","ip_address_info_to_add","new_pingbursts","prevState","cmap","setProperty","setScrollbarToCurrentTheme","setColorSchemeToCSSVars","dash_title_container_style","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c429203f.chunk.js","sourcesContent":["let app_fonts = {\r\n  font: \"18px Raleway, sans-serif\",\r\n  fontWeight: 400,\r\n  \"-webkit-font-smoothing\": \"antialiased\",\r\n  \"-moz-osx-font-smoothing\": \"grayscale\",\r\n  color: \"white\",\r\n};\r\nexport default app_fonts;\r\n","const gruvbox_colors = {\r\n  \"gruvbox-dark0\": \"#282828\",\r\n  \"gruvbox-dark0_hard\": \"#1d2021\",\r\n  \"gruvbox-dark0_soft\": \"#32302f\",\r\n  \"gruvbox-dark1\": \"#3c3836\",\r\n  \"gruvbox-dark2\": \"#504945\",\r\n  \"gruvbox-dark3\": \"#665c54\",\r\n  \"gruvbox-dark4\": \"#7c6f64\",\r\n  \"gruvbox-light0\": \"#fbf1c7\",\r\n  \"gruvbox-light0_hard\": \"#f9f5d7\",\r\n  \"gruvbox-light0_soft\": \"#f2e5bc\",\r\n  \"gruvbox-light1\": \"#ebdbb2\",\r\n  \"gruvbox-light2\": \"#d5c4a1\",\r\n  \"gruvbox-light3\": \"#bdae93\",\r\n  \"gruvbox-light4\": \"#a89984\",\r\n  \"gruvbox-bg\": \"#282828\",\r\n  \"gruvbox-fg\": \"f2e5bc\",\r\n  \"gruvbox-gray\": \"#928374\",\r\n  \"gruvbox-red\": \"#cc241d\",\r\n  \"gruvbox-light-red\": \"#fb4934\",\r\n  \"gruvbox-faded-red\": \"#9d0006\",\r\n  \"gruvbox-green\": \"#98971a\",\r\n  \"gruvbox-light-green\": \"#b8bb26\",\r\n  \"gruvbox-faded-green\": \"#79740e\",\r\n  \"gruvbox-yellow\": \"#d79921\",\r\n  \"gruvbox-light-yellow\": \"#fabd2f\",\r\n  \"gruvbox-faded-yellow\": \"#b57614\",\r\n  \"gruvbox-blue\": \"#458588\",\r\n  \"gruvbox-light-blue\": \"#83a598\",\r\n  \"gruvbox-faded-blue\": \"#076678\",\r\n  \"gruvbox-purple\": \"#b16286\",\r\n  \"gruvbox-light-purple\": \"#d3869b\",\r\n  \"gruvbox-faded-purple\": \"#8f3f71\",\r\n  \"gruvbox-aqua\": \"#689d6a\",\r\n  \"gruvbox-light-aqua\": \"#8ec07c\",\r\n  \"gruvbox-faded-aqua\": \"#427b58\",\r\n  \"gruvbox-orange\": \"#d65d0e\",\r\n  \"gruvbox-light-orange\": \"#fe8019\",\r\n  \"gruvbox-faded-orange\": \"#af3a03\",\r\n};\r\n\r\nconst color_scheme = {\r\n  bg: gruvbox_colors[\"gruvbox-dark0\"],\r\n  bg0h: gruvbox_colors[\"gruvbox-dark0_hard\"],\r\n  bg0: gruvbox_colors[\"gruvbox-dark0\"],\r\n  bg1: gruvbox_colors[\"gruvbox-dark1\"],\r\n  bg2: gruvbox_colors[\"gruvbox-dark2\"],\r\n  bg3: gruvbox_colors[\"gruvbox-dark3\"],\r\n  bg4: gruvbox_colors[\"gruvbox-dark4\"],\r\n  fg0: gruvbox_colors[\"gruvbox-light0\"],\r\n  white: \"#FFFFFF\",\r\n  red: gruvbox_colors[\"gruvbox-light-red\"],\r\n  green: gruvbox_colors[\"gruvbox-light-green\"],\r\n  yellow: gruvbox_colors[\"gruvbox-light-yellow\"],\r\n  blue: gruvbox_colors[\"gruvbox-light-blue\"],\r\n  purple: gruvbox_colors[\"gruvbox-light-purple\"],\r\n  aqua: gruvbox_colors[\"gruvbox-light-aqua\"],\r\n  gray: gruvbox_colors[\"gruvbox-gray\"],\r\n  orange: gruvbox_colors[\"gruvbox-orange\"],\r\n};\r\n\r\nexport default color_scheme;\r\n","const ti_color_scheme = {\r\n  white: \"#FFFFFF\",\r\n  bg: \"#ECECEC\",\r\n  // bg0h: gruvbox_colors[\"gruvbox-dark0_hard\"],\r\n  bg0: \"#ECECEC\",\r\n  bg1: \"#EBF6F7\",\r\n  bg2: \"#F7F7F7\",\r\n  bg3: \"#FFFFFF\",\r\n  // bg4: gruvbox_colors[\"gruvbox-dark4\"],\r\n  // fg0: gruvbox_colors[\"gruvbox-light0\"],\r\n  red: \"#CC0000\",\r\n  red_dark: \"#AE0000\",\r\n  green: \"#44BB55\",\r\n  yellow: \"#fabd2f\",\r\n  orange: \"#FE8019\",\r\n  blue: \"#007C8C\",\r\n  // purple: gruvbox_colors[\"gruvbox-light-purple\"],\r\n  // aqua: gruvbox_colors[\"gruvbox-light-aqua\"],\r\n  gray: \"#555555\",\r\n  gray_light: \"#98999B\",\r\n  // orange: gruvbox_colors[\"gruvbox-orange\"],\r\n};\r\n\r\nexport default ti_color_scheme;\r\n","import gruvbox_color_theme from \"./gruvbox.js\";\r\nimport ti_color_theme from \"./ti_colors.js\";\r\nimport { createContext } from \"react\";\r\n\r\nconst THEME = {\r\n  TI: \"ti\",\r\n  GRUVBOX: \"gruvbox\",\r\n};\r\nObject.freeze(THEME);\r\n\r\nconst ThemeContext = createContext(THEME.GRUVBOX);\r\n\r\nconst ColorScheme = {\r\n  color_maps: {\r\n    gruvbox: gruvbox_color_theme,\r\n    ti: ti_color_theme,\r\n  },\r\n\r\n  get_color: function (name, theme = THEME.GRUVBOX) {\r\n    return this.color_maps[theme][name];\r\n  },\r\n  get_color_with_opacity: function (color, opacity, theme = THEME.GRUVBOX) {\r\n    //opacity [0,1]\r\n    let hexcolor = this.get_color(color, theme);\r\n    const r = parseInt(hexcolor.substring(1, 3), 16);\r\n    const g = parseInt(hexcolor.substring(3, 5), 16);\r\n    const b = parseInt(hexcolor.substring(5), 16);\r\n    return `rgba(${r},${g},${b},${opacity})`;\r\n  },\r\n};\r\n\r\nexport { ColorScheme, THEME, ThemeContext };\r\n","import { useContext } from \"react\";\r\nimport { ColorScheme, ThemeContext, THEME } from \"../ColorScheme\";\r\nimport \"../assets/Pane.css\";\r\n\r\nexport default function Pane(props) {\r\n  const theme = useContext(ThemeContext);\r\n  const style = {\r\n    backgroundColor:\r\n      theme === THEME.TI ? \"rgba(0,0,0,0)\" : ColorScheme.get_color(\"bg1\"),\r\n  };\r\n  return (\r\n    <div className=\"pane\" style={style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\nimport \"../assets/Tile.css\";\r\n\r\nexport function TileHeader(props) {\r\n  const theme = useContext(ThemeContext);\r\n  let title_style = null;\r\n  if (theme === THEME.TI) {\r\n    title_style = {\r\n      color: ColorScheme.get_color(\"gray\", theme),\r\n      fontWeight: 600,\r\n    };\r\n  }\r\n  return (\r\n    <h2 style={title_style} className=\"tile_header\">\r\n      {props.title}\r\n    </h2>\r\n  );\r\n}\r\n\r\nexport default function Tile(props) {\r\n  const theme = useContext(ThemeContext);\r\n  let surface_style = null;\r\n  if (theme === THEME.TI) {\r\n    surface_style = {\r\n      backgroundColor: ColorScheme.get_color(\"bg2\", theme),\r\n      borderTop: `3px solid ${ColorScheme.get_color(\"red\", theme)}`,\r\n      boxShadow: \"0px 1px 14px rgba(0, 0, 0, 0.3)\",\r\n      borderRadius: 0,\r\n    };\r\n  } else {\r\n    surface_style = {\r\n      backgroundColor: ColorScheme.get_color(\"bg2\", theme),\r\n      borderRadius: 10,\r\n    };\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {!props.omit_header && <TileHeader title={props.title} />}\r\n      <div style={surface_style} className=\"tile\">\r\n        {props.children}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","/* eslint no-debugger: \"warn\" */\r\nimport React, { Component } from \"react\";\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n\r\n/**\r\n * Capitalize first letter of string\r\n * @private\r\n * @param  {string} - String\r\n * @return {string} - String with first letter capitalized\r\n */\r\nfunction capitalize(str) {\r\n  return str.charAt(0).toUpperCase() + str.substr(1);\r\n}\r\n\r\n/**\r\n * Clamp position between a range\r\n * @param  {number} - Value to be clamped\r\n * @param  {number} - Minimum value in range\r\n * @param  {number} - Maximum value in range\r\n * @return {number} - Clamped value\r\n */\r\nfunction clamp(value, min, max) {\r\n  return Math.min(Math.max(value, min), max);\r\n}\r\n\r\n/**\r\n * Predefined constants\r\n * @type {Object}\r\n */\r\nconst constants = {\r\n  orientation: {\r\n    horizontal: {\r\n      dimension: \"width\",\r\n      direction: \"left\",\r\n      reverseDirection: \"right\",\r\n      coordinate: \"x\",\r\n    },\r\n    vertical: {\r\n      dimension: \"height\",\r\n      direction: \"top\",\r\n      reverseDirection: \"bottom\",\r\n      coordinate: \"y\",\r\n    },\r\n  },\r\n};\r\n\r\nclass Slider extends Component {\r\n  // static propTypes = {\r\n  //   min: PropTypes.number,\r\n  //   max: PropTypes.number,\r\n  //   step: PropTypes.number,\r\n  //   value: PropTypes.number,\r\n  //   orientation: PropTypes.string,\r\n  //   tooltip: PropTypes.bool,\r\n  //   reverse: PropTypes.bool,\r\n  //   labels: PropTypes.object,\r\n  //   handleLabel: PropTypes.string,\r\n  //   format: PropTypes.func,\r\n  //   onChangeStart: PropTypes.func,\r\n  //   onChange: PropTypes.func,\r\n  //   onChangeComplete: PropTypes.func,\r\n  // };\r\n\r\n  static defaultProps = {\r\n    min: 0,\r\n    max: 100,\r\n    step: 1,\r\n    value: 0,\r\n    orientation: \"horizontal\",\r\n    tooltip: true,\r\n    reverse: false,\r\n    labels: {},\r\n    handleLabel: \"\",\r\n  };\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      active: false,\r\n      limit: 0,\r\n      grab: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleUpdate();\r\n    const resizeObserver = new ResizeObserver(this.handleUpdate);\r\n    resizeObserver.observe(this.slider);\r\n  }\r\n\r\n  /**\r\n   * Format label/tooltip value\r\n   * @param  {Number} - value\r\n   * @return {Formatted Number}\r\n   */\r\n  handleFormat = (value) => {\r\n    const { format } = this.props;\r\n    return format ? format(value) : value;\r\n  };\r\n\r\n  /**\r\n   * Update slider state on change\r\n   * @return {void}\r\n   */\r\n  handleUpdate = () => {\r\n    if (!this.slider) {\r\n      // for shallow rendering\r\n      return;\r\n    }\r\n    const { orientation } = this.props;\r\n    const dimension = capitalize(constants.orientation[orientation].dimension);\r\n    const sliderPos = this.slider[`offset${dimension}`];\r\n    const handlePos = this.handle[`offset${dimension}`];\r\n    this.setState({\r\n      limit: sliderPos - handlePos,\r\n      grab: handlePos / 2,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Attach event listeners to mousemove/mouseup events\r\n   * @return {void}\r\n   */\r\n  handleStart = (e) => {\r\n    const { onChangeStart } = this.props;\r\n    document.addEventListener(\"mousemove\", this.handleDrag);\r\n    document.addEventListener(\"mouseup\", this.handleEnd);\r\n    this.setState(\r\n      {\r\n        active: true,\r\n      },\r\n      () => {\r\n        onChangeStart && onChangeStart(e);\r\n      }\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Handle drag/mousemove event\r\n   * @param  {Object} e - Event object\r\n   * @return {void}\r\n   */\r\n  handleDrag = (e) => {\r\n    e.stopPropagation();\r\n    const { onChange } = this.props;\r\n    const {\r\n      target: { className, classList, dataset },\r\n    } = e;\r\n    if (!onChange || className === \"rangeslider__labels\") return;\r\n\r\n    let value = this.position(e);\r\n\r\n    if (\r\n      classList &&\r\n      classList.contains(\"rangeslider__label-item\") &&\r\n      dataset.value\r\n    ) {\r\n      value = parseFloat(dataset.value);\r\n    }\r\n\r\n    onChange && onChange(value, e);\r\n  };\r\n\r\n  /**\r\n   * Detach event listeners to mousemove/mouseup events\r\n   * @return {void}\r\n   */\r\n  handleEnd = (e) => {\r\n    const { onChangeComplete } = this.props;\r\n    this.setState(\r\n      {\r\n        active: false,\r\n      },\r\n      () => {\r\n        onChangeComplete && onChangeComplete(e);\r\n      }\r\n    );\r\n    document.removeEventListener(\"mousemove\", this.handleDrag);\r\n    document.removeEventListener(\"mouseup\", this.handleEnd);\r\n  };\r\n\r\n  /**\r\n   * Support for key events on the slider handle\r\n   * @param  {Object} e - Event object\r\n   * @return {void}\r\n   */\r\n  handleKeyDown = (e) => {\r\n    e.preventDefault();\r\n    const { keyCode } = e;\r\n    const { value, min, max, step, onChange } = this.props;\r\n    let sliderValue;\r\n\r\n    switch (keyCode) {\r\n      case 38:\r\n      case 39:\r\n        sliderValue = value + step > max ? max : value + step;\r\n        onChange && onChange(sliderValue, e);\r\n        break;\r\n      case 37:\r\n      case 40:\r\n        sliderValue = value - step < min ? min : value - step;\r\n        onChange && onChange(sliderValue, e);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Calculate position of slider based on its value\r\n   * @param  {number} value - Current value of slider\r\n   * @return {position} pos - Calculated position of slider based on value\r\n   */\r\n  getPositionFromValue = (value) => {\r\n    const { limit } = this.state;\r\n    const { min, max } = this.props;\r\n    const diffMaxMin = max - min;\r\n    const diffValMin = value - min;\r\n    const percentage = diffValMin / diffMaxMin;\r\n    const pos = Math.round(percentage * limit);\r\n\r\n    return pos;\r\n  };\r\n\r\n  /**\r\n   * Translate position of slider to slider value\r\n   * @param  {number} pos - Current position/coordinates of slider\r\n   * @return {number} value - Slider value\r\n   */\r\n  getValueFromPosition = (pos) => {\r\n    const { limit } = this.state;\r\n    const { orientation, min, max, step } = this.props;\r\n    const percentage = clamp(pos, 0, limit) / (limit || 1);\r\n    const baseVal = step * Math.round((percentage * (max - min)) / step);\r\n    const value = orientation === \"horizontal\" ? baseVal + min : max - baseVal;\r\n\r\n    return clamp(value, min, max);\r\n  };\r\n\r\n  /**\r\n   * Calculate position of slider based on value\r\n   * @param  {Object} e - Event object\r\n   * @return {number} value - Slider value\r\n   */\r\n  position = (e) => {\r\n    const { grab } = this.state;\r\n    const { orientation, reverse } = this.props;\r\n\r\n    const node = this.slider;\r\n    const coordinateStyle = constants.orientation[orientation].coordinate;\r\n    const directionStyle = reverse\r\n      ? constants.orientation[orientation].reverseDirection\r\n      : constants.orientation[orientation].direction;\r\n    const clientCoordinateStyle = `client${capitalize(coordinateStyle)}`;\r\n    const coordinate = !e.touches\r\n      ? e[clientCoordinateStyle]\r\n      : e.touches[0][clientCoordinateStyle];\r\n    const direction = node.getBoundingClientRect()[directionStyle];\r\n    const pos = reverse\r\n      ? direction - coordinate - grab\r\n      : coordinate - direction - grab;\r\n    const value = this.getValueFromPosition(pos);\r\n\r\n    return value;\r\n  };\r\n\r\n  /**\r\n   * Grab coordinates of slider\r\n   * @param  {Object} pos - Position object\r\n   * @return {Object} - Slider fill/handle coordinates\r\n   */\r\n  coordinates = (pos) => {\r\n    const { limit, grab } = this.state;\r\n    const { orientation } = this.props;\r\n    const value = this.getValueFromPosition(pos);\r\n    const position = this.getPositionFromValue(value);\r\n    const handlePos = orientation === \"horizontal\" ? position + grab : position;\r\n    const fillPos =\r\n      orientation === \"horizontal\" ? handlePos : limit - handlePos;\r\n\r\n    return {\r\n      fill: fillPos,\r\n      handle: handlePos,\r\n      label: handlePos,\r\n    };\r\n  };\r\n\r\n  renderLabels = (labels) => (\r\n    <ul\r\n      ref={(sl) => {\r\n        this.labels = sl;\r\n      }}\r\n      style={this.props.label_container_style}\r\n    >\r\n      {labels}\r\n    </ul>\r\n  );\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      orientation,\r\n      tooltip,\r\n      reverse,\r\n      labels,\r\n      min,\r\n      max,\r\n      handleLabel,\r\n    } = this.props;\r\n    const { active } = this.state;\r\n    const dimension = constants.orientation[orientation].dimension;\r\n    const direction = reverse\r\n      ? constants.orientation[orientation].reverseDirection\r\n      : constants.orientation[orientation].direction;\r\n    const position = this.getPositionFromValue(value);\r\n    const coords = this.coordinates(position);\r\n    const fillStyle = Object.assign({}, this.props.fill_style, {\r\n      [dimension]: `${coords.fill}px`,\r\n    });\r\n    const handleStyle = Object.assign({}, this.props.handle_style, {\r\n      [direction]: `${coords.handle}px`,\r\n    });\r\n    let showTooltip = tooltip && active;\r\n\r\n    let labelItems = [];\r\n    let labelKeys = Object.keys(labels);\r\n\r\n    if (labelKeys.length > 0) {\r\n      labelKeys = labelKeys.sort((a, b) => (reverse ? a - b : b - a));\r\n\r\n      for (let key of labelKeys) {\r\n        const labelPosition = this.getPositionFromValue(key);\r\n        const labelCoords = this.coordinates(labelPosition);\r\n        const labelStyle = Object.assign({}, this.props.labelStyle, {\r\n          [direction]: `${labelCoords.label}px`,\r\n        });\r\n\r\n        labelItems.push(\r\n          <li\r\n            key={key}\r\n            data-value={key}\r\n            onMouseDown={this.handleDrag}\r\n            onTouchStart={this.handleStart}\r\n            onTouchEnd={this.handleEnd}\r\n            style={labelStyle}\r\n          >\r\n            {this.props.labels[key]}\r\n          </li>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={(s) => {\r\n          this.slider = s;\r\n        }}\r\n        onMouseDown={this.handleDrag}\r\n        onMouseUp={this.handleEnd}\r\n        onTouchStart={this.handleStart}\r\n        onTouchEnd={this.handleEnd}\r\n        aria-valuemin={min}\r\n        aria-valuemax={max}\r\n        aria-valuenow={value}\r\n        aria-orientation={orientation}\r\n        style={this.props.rail_style}\r\n      >\r\n        <div style={fillStyle} />\r\n        <div\r\n          ref={(sh) => {\r\n            this.handle = sh;\r\n          }}\r\n          onMouseDown={this.handleStart}\r\n          onTouchMove={this.handleDrag}\r\n          onTouchEnd={this.handleEnd}\r\n          onKeyDown={this.handleKeyDown}\r\n          style={handleStyle}\r\n          tabIndex={0}\r\n        >\r\n          {showTooltip ? (\r\n            <div\r\n              ref={(st) => {\r\n                this.tooltip = st;\r\n              }}\r\n              style={this.props.tooltip_style}\r\n            >\r\n              <span>{this.handleFormat(value)}</span>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"rangeslider__handle-label\">{handleLabel}</div>\r\n        </div>\r\n        {labels ? this.renderLabels(labelItems) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slider;\r\n","import { useContext } from \"react\";\r\nimport \"../assets/ThemedInput.css\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\n\r\nexport function ThemedInput(props) {\r\n  const theme = useContext(ThemeContext);\r\n  let input_style = null;\r\n  if (theme === THEME.TI) {\r\n    const background = ColorScheme.get_color(\"bg0\", theme);\r\n    let gray = ColorScheme.get_color(\"gray\", theme);\r\n    input_style = {\r\n      borderTop: `1px solid ${ColorScheme.get_color(\"red\", THEME.TI)}`,\r\n      boxShadow: \"0px 0px 4px rgba(0, 0, 0, 0.25) \",\r\n      backgroundColor: background,\r\n      borderRadius: 0,\r\n      color: gray,\r\n      fontWeight: 600,\r\n    };\r\n  } else {\r\n    const background = ColorScheme.get_color(\"bg1\", theme);\r\n    input_style = {\r\n      backgroundColor: background,\r\n      color: ColorScheme.get_color(\"white\", theme),\r\n    };\r\n  }\r\n  return (\r\n    <input\r\n      className={\"themed_input \".concat(props.className || \"\")}\r\n      type=\"text\"\r\n      style={{ ...props.style, ...input_style }}\r\n      spellCheck=\"false\"\r\n      value={String(props.value)}\r\n      onChange={props.onChange}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\nimport \"../assets/Slider.css\";\r\nimport ReactRangeSlider from \"./ReactRangeSlider\";\r\nimport { ThemedInput } from \"./ThemedInput\";\r\n\r\nexport default class Slider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.slider_container_ref = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  textChangeHandler = (event) => {\r\n    let val = event.target.value;\r\n    const is_valid_number = /^-{0,1}\\d+$/.test(val);\r\n    if (!is_valid_number) {\r\n      return;\r\n    }\r\n    val = Math.max(this.props.min, val);\r\n    val = Math.min(this.props.max, val);\r\n    this.changeHandler(val);\r\n  };\r\n\r\n  changeHandler = (value) => {\r\n    this.props.value_change_handler(this.props.name, value);\r\n  };\r\n\r\n  render() {\r\n    const theme = this.context;\r\n    const progress_color = ColorScheme.get_color(\"blue\", theme);\r\n    const slider_height = 12;\r\n    let background = null;\r\n    let handle_radius = null;\r\n    let main_border_radius = null;\r\n    let handle_style = {\r\n      cursor: \"pointer\",\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translate3d(-50%, -50%, 0)\",\r\n    };\r\n    if (theme === THEME.TI) {\r\n      background = ColorScheme.get_color(\"bg0\", theme);\r\n      handle_radius = 0;\r\n      main_border_radius = 0;\r\n      handle_style = {\r\n        width: slider_height * 2,\r\n        height: (slider_height * 3) / 2,\r\n        backgroundColor: progress_color,\r\n        boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\r\n        ...handle_style,\r\n      };\r\n    } else {\r\n      background = ColorScheme.get_color(\"bg1\", theme);\r\n      handle_radius = (slider_height * 5) / 6;\r\n      main_border_radius = 9;\r\n      handle_style = {\r\n        borderRadius: handle_radius,\r\n        width: handle_radius * 2,\r\n        height: handle_radius * 2,\r\n        backgroundColor: progress_color,\r\n        border: `1px solid ${background}`,\r\n        boxShadow: \"none\",\r\n        ...handle_style,\r\n      };\r\n    }\r\n    const step = this.props.step || 1;\r\n\r\n    const fill_style = {\r\n      display: \"block\",\r\n      height: slider_height,\r\n      backgroundColor: progress_color,\r\n      borderRadius: main_border_radius,\r\n      position: \"absolute\",\r\n    };\r\n    const rail_style = {\r\n      borderRadius: main_border_radius,\r\n      height: slider_height,\r\n      position: \"relative\",\r\n      backgroundColor: background,\r\n      width: \"60%\",\r\n    };\r\n\r\n    return (\r\n      <div ref={this.slider_container_ref} className=\"slider_container\">\r\n        <ReactRangeSlider\r\n          handle_style={handle_style}\r\n          tooltip={false}\r\n          fill_style={fill_style}\r\n          rail_style={rail_style}\r\n          min={this.props.min}\r\n          max={this.props.max}\r\n          step={step}\r\n          value={this.props.value}\r\n          onChange={this.changeHandler}\r\n        />\r\n        <ThemedInput\r\n          className=\"slider_input\"\r\n          value={this.props.value}\r\n          onChange={this.textChangeHandler}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nSlider.contextType = ThemeContext;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\nimport \"../assets/PingSubmit.css\";\r\n\r\nexport default function PingSubmit(props) {\r\n  const [isHovering, setHoverState] = useState(false);\r\n  const [isClicked, setClickState] = useState(false);\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const blue = ColorScheme.get_color(\"blue\", theme);\r\n  const blue_25 = ColorScheme.get_color_with_opacity(\"blue\", 0.25, theme);\r\n  const blue_75 = ColorScheme.get_color_with_opacity(\"blue\", 0.75, theme);\r\n  let submit_style = {\r\n    backgroundColor: blue,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  };\r\n  let submit_hover_style = {\r\n    boxShadow: `0px 0px 11px 0px ${blue_25}`,\r\n  };\r\n  let submit_click_style = {\r\n    backgroundColor: blue_75,\r\n  };\r\n  if (theme === THEME.TI) {\r\n    submit_style = {\r\n      borderRadius: 0,\r\n      ...submit_style,\r\n    };\r\n  }\r\n\r\n  function mergeStyles(original, additions) {\r\n    //adds and potential overwrites original styles with new styles\r\n    for (let key in additions) {\r\n      original[key] = additions[key];\r\n    }\r\n  }\r\n\r\n  if (isHovering) {\r\n    mergeStyles(submit_style, submit_hover_style);\r\n  }\r\n\r\n  if (isClicked) {\r\n    mergeStyles(submit_style, submit_click_style);\r\n  }\r\n\r\n  function click_handler(event) {\r\n    setClickState(true);\r\n    setTimeout(() => setClickState(false), 50);\r\n    props.click_handler(event);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      type=\"button\"\r\n      // whileHover={{ scale: 1.05 }}\r\n      // whileTap={{ scale: 0.95 }}\r\n      onMouseEnter={() => setHoverState(true)}\r\n      onMouseLeave={() => setHoverState(false)}\r\n      onClick={click_handler}\r\n      style={submit_style}\r\n      className=\"blue_button ping_submit\"\r\n    >\r\n      Submit\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport \"../assets/CheckBox.css\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\n\r\nexport default function CheckBox(props) {\r\n  const theme = useContext(ThemeContext);\r\n  let bg_style = null;\r\n  let fg_style = null;\r\n  if (theme === THEME.TI) {\r\n    bg_style = {\r\n      backgroundColor: ColorScheme.get_color(\"bg0\", theme),\r\n      boxShadow: \"0px 0px 4px rgba(0, 0, 0, 0.25) \",\r\n    };\r\n    fg_style = {\r\n      backgroundColor: ColorScheme.get_color(\"gray\", theme),\r\n    };\r\n  } else {\r\n    const borderRadius = 5;\r\n    bg_style = {\r\n      backgroundColor: ColorScheme.get_color(\"bg1\", theme),\r\n      borderRadius,\r\n    };\r\n    fg_style = {\r\n      backgroundColor: ColorScheme.get_color(\"fg0\", theme),\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={bg_style}\r\n      className={`${props.className} checkbox_bg`}\r\n      onClick={(event) => {\r\n        props.click_handler(!props.is_checked);\r\n      }}\r\n    >\r\n      {props.is_checked && <div style={fg_style} className=\"checkbox_fg\"></div>}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport Slider from \"./Slider\";\r\nimport \"../assets/PingConfig.css\";\r\nimport PingSubmit from \"./PingSubmit\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\nimport CheckBox from \"./CheckBox\";\r\nimport { ThemedInput } from \"./ThemedInput\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction NumberOfPackets(props) {\r\n  const theme = useContext(ThemeContext);\r\n  const [isInfinite, setIsInfinite] = useState(false);\r\n  const lastKnownFiniteNumPackets = useRef(props.num_packets);\r\n  let fontSize = isInfinite ? 20 : 14;\r\n\r\n  const updateIsInfinite = (newVal) => {\r\n    setIsInfinite(newVal);\r\n    props.value_change_handler(\r\n      props.name,\r\n      newVal ? \"∞\" : String(lastKnownFiniteNumPackets.current)\r\n    );\r\n  };\r\n\r\n  const onChangeHandler = ({ target }) => {\r\n    if (isInfinite) {\r\n      return;\r\n    }\r\n    const newVal = target.value;\r\n    lastKnownFiniteNumPackets.current = newVal;\r\n    props.value_change_handler(props.name, newVal);\r\n  };\r\n  return (\r\n    <div className=\"num_packets_container\">\r\n      <div>\r\n        <CheckBox\r\n          className={\"is_infinite_checkbox \".concat(theme)}\r\n          is_checked={isInfinite}\r\n          click_handler={updateIsInfinite}\r\n        />\r\n      </div>\r\n      <ThemedInput\r\n        value={props.num_packets}\r\n        style={{ marginLeft: 10, width: \"16%\", fontSize }}\r\n        onChange={onChangeHandler}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default class PingConfiguration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      packet_size: 53,\r\n      timeout: 500,\r\n      interval: 1000,\r\n      num_packets: 10,\r\n    };\r\n  }\r\n\r\n  send_pingburst = (destination_ip) => {\r\n    const pc_ids = [\"packet_size\", \"num_packets\", \"timeout\", \"interval\"];\r\n    const pingburst_request = {};\r\n    for (const id of pc_ids) {\r\n      pingburst_request[id] = this.state[id];\r\n    }\r\n    pingburst_request[\"dest_ip\"] = destination_ip;\r\n    const request_opts = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      mode: \"cors\",\r\n    };\r\n    request_opts[\"body\"] = JSON.stringify(pingburst_request);\r\n    fetch(\r\n      new URL(\"pingbursts\", document.ping_api_location),\r\n      request_opts\r\n    ).catch((err) => console.log(err));\r\n    // console.log(\"Sent Pingburst!\", pingburst_request);\r\n  };\r\n\r\n  click_handler = () => {\r\n    const destination_ips = [];\r\n    for (let ip_info of this.props.ip_address_info_array)\r\n      if (ip_info.is_selected) {\r\n        destination_ips.push(ip_info.ip_address);\r\n      }\r\n    destination_ips.forEach((ip) => {\r\n      this.send_pingburst(ip);\r\n    });\r\n  };\r\n\r\n  parameter_change_handler = (name, value) => {\r\n    this.setState((state) => {\r\n      if (name === \"interval\" && value < state.timeout) {\r\n        return {\r\n          interval: value,\r\n          timeout: value,\r\n        };\r\n      }\r\n      if (name === \"timeout\" && value > state.interval) {\r\n        return {\r\n          interval: value,\r\n          timeout: value,\r\n        };\r\n      }\r\n      return { [name]: value };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const theme = this.context;\r\n    let labelStyle = null;\r\n    if (theme === THEME.TI) {\r\n      labelStyle = {\r\n        color: ColorScheme.get_color(\"gray\", theme),\r\n        fontWeight: 600,\r\n      };\r\n    } else {\r\n      labelStyle = {};\r\n    }\r\n\r\n    return (\r\n      <div className=\"ping_form_container\">\r\n        <label style={labelStyle} className=\"ping_form_label\">\r\n          Packet Size [B]\r\n        </label>\r\n        <Slider\r\n          min={0}\r\n          step={25}\r\n          max={1000}\r\n          name=\"packet_size\"\r\n          value={this.state.packet_size}\r\n          value_change_handler={this.parameter_change_handler}\r\n        />\r\n        <label style={labelStyle} className=\"ping_form_label\">\r\n          Timeout [ms]\r\n        </label>\r\n        <Slider\r\n          min={0}\r\n          step={500}\r\n          max={9999}\r\n          name=\"timeout\"\r\n          value={this.state.timeout}\r\n          value_change_handler={this.parameter_change_handler}\r\n        />\r\n        <label style={labelStyle} className=\"ping_form_label\">\r\n          Interval [ms]\r\n        </label>\r\n        <Slider\r\n          min={0}\r\n          step={500}\r\n          max={9999}\r\n          name=\"interval\"\r\n          value={this.state.interval}\r\n          value_change_handler={this.parameter_change_handler}\r\n        />\r\n        <label style={labelStyle} className=\"ping_form_label\">\r\n          Number of Packets\r\n        </label>\r\n        <NumberOfPackets\r\n          name=\"num_packets\"\r\n          value_change_handler={this.parameter_change_handler}\r\n          num_packets={this.state.num_packets}\r\n        />\r\n        <PingSubmit click_handler={this.click_handler} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPingConfiguration.contextType = ThemeContext;\r\n","import React, { useContext } from \"react\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\nimport \"../assets/ArcBar.css\";\r\n\r\nexport default function ArcBar(props) {\r\n  const theme = useContext(ThemeContext);\r\n  let label_color = null;\r\n  let sub_label_color = null;\r\n  let lineCapType = null;\r\n  let backgroundColor = null;\r\n  let isShadow = null;\r\n  const red = ColorScheme.get_color(\"red\", theme);\r\n  const yellow = ColorScheme.get_color(\"yellow\", theme);\r\n  const green = ColorScheme.get_color(\"green\", theme);\r\n  if (theme === THEME.TI) {\r\n    isShadow = true;\r\n    backgroundColor = ColorScheme.get_color(\"bg0\", THEME.TI);\r\n    sub_label_color = ColorScheme.get_color(\"gray_light\", THEME.TI);\r\n    label_color = ColorScheme.get_color(\"gray\", THEME.TI);\r\n    lineCapType = \"square\";\r\n  } else {\r\n    backgroundColor = ColorScheme.get_color(\"bg1\", THEME.GRUVBOX);\r\n    sub_label_color = ColorScheme.get_color(\"gray\", THEME.GRUVBOX);\r\n    label_color = ColorScheme.get_color(\"white\", THEME.GRUVBOX);\r\n    lineCapType = \"round\";\r\n  }\r\n  const bigger_better_thresholds = {\r\n    0.3: red,\r\n    0.6: yellow,\r\n    0.9: green,\r\n  };\r\n  const bigger_worse_thresholds = {\r\n    0.3: green,\r\n    0.6: yellow,\r\n    0.9: red,\r\n  };\r\n  let thresholds = props.is_bigger_better\r\n    ? bigger_better_thresholds\r\n    : bigger_worse_thresholds;\r\n  let progress_color = props.is_bigger_better ? green : red;\r\n  for (let threshold in thresholds) {\r\n    if (threshold > props.percentFull) {\r\n      progress_color = thresholds[threshold];\r\n      break;\r\n    }\r\n  }\r\n  let total_arc_length = 210.487;\r\n  let percent = props.percentFull;\r\n  const stroke_dash = {\r\n    strokeDasharray: total_arc_length,\r\n    strokeDashoffset: -1 * total_arc_length * (1 - percent),\r\n  };\r\n  return (\r\n    <div className=\"arc_bar_container\">\r\n      <svg\r\n        className=\"arc_bar\"\r\n        width=\"144\"\r\n        height=\"77\"\r\n        viewBox=\"0 0 144 77\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <g filter={isShadow ? `url(#arc_bar_shadow)` : null}>\r\n          <path\r\n            style={{ stroke: backgroundColor }}\r\n            d=\"M139 72\r\n        C139 54.2305 131.941 37.1888 119.376 24.6238\r\n        C106.811 12.0589 89.7695 5 72 5\r\n        C54.2305 5 37.1888 12.0589 24.6239 24.6238\r\n        C12.0589 37.1888 5 54.2305 5 72\"\r\n            strokeWidth=\"10\"\r\n            strokeLinecap={lineCapType}\r\n          />\r\n          <path\r\n            style={{ stroke: progress_color, ...stroke_dash }}\r\n            d=\"M139 72\r\n        C139 54.2305 131.941 37.1888 119.376 24.6238\r\n        C106.811 12.0589 89.7695 5 72 5\r\n        C54.2305 5 37.1888 12.0589 24.6239 24.6238\r\n        C12.0589 37.1888 5 54.2305 5 72\"\r\n            strokeWidth=\"10\"\r\n            strokeLinecap={lineCapType}\r\n          />\r\n        </g>\r\n        <defs>\r\n          <filter\r\n            id=\"arc_bar_shadow\"\r\n            x=\"0.889893\"\r\n            y=\"0\"\r\n            width=\"166.92\"\r\n            height=\"94.5\"\r\n            filterUnits=\"userSpaceOnUse\"\r\n            colorInterpolationFilters=\"sRGB\"\r\n          >\r\n            <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n            <feColorMatrix\r\n              in=\"SourceAlpha\"\r\n              type=\"matrix\"\r\n              values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\r\n              result=\"hardAlpha\"\r\n            />\r\n            <feOffset />\r\n            <feGaussianBlur stdDeviation=\"2\" />\r\n            <feComposite in2=\"hardAlpha\" operator=\"out\" />\r\n            <feColorMatrix\r\n              type=\"matrix\"\r\n              values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"\r\n            />\r\n            <feBlend\r\n              mode=\"normal\"\r\n              in2=\"BackgroundImageFix\"\r\n              result=\"effect1_dropShadow_176:280\"\r\n            />\r\n            <feBlend\r\n              mode=\"normal\"\r\n              in=\"SourceGraphic\"\r\n              in2=\"effect1_dropShadow_176:280\"\r\n              result=\"shape\"\r\n            />\r\n          </filter>\r\n        </defs>\r\n      </svg>\r\n      <h3 style={{ color: label_color }} className=\"arc_bar_label_top\">\r\n        {props.valueText}\r\n      </h3>\r\n      <h4 style={{ color: label_color }} className=\"arc_bar_label_bottom\">\r\n        {props.valueDescription}\r\n      </h4>\r\n      <p\r\n        style={{ color: sub_label_color }}\r\n        className=\"arc_bar_tick arc_bar_tick_left\"\r\n      >\r\n        {props.minLabel}\r\n      </p>\r\n      <p\r\n        style={{ color: sub_label_color }}\r\n        className=\"arc_bar_tick arc_bar_tick_right\"\r\n      >\r\n        {props.maxLabel}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport \"../assets/AtAGlance.css\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\nimport ArcBar from \"./ArcBar.js\";\r\n\r\nexport default function AtAGlance(props) {\r\n  const pingbursts = props.pingbursts;\r\n  let success_counter = 0;\r\n  let packet_counter = 0;\r\n  let duration_sum = 0;\r\n  let success_sum = 0;\r\n  for (const pingburst of pingbursts) {\r\n    for (const record of pingburst.records) {\r\n      success_sum += record.was_success ? 1 : 0;\r\n      packet_counter++;\r\n      if (record.was_success) {\r\n        duration_sum += record.duration;\r\n        success_counter++;\r\n      }\r\n    }\r\n  }\r\n\r\n  const average_duration =\r\n    success_counter !== 0 ? duration_sum / success_counter : 1;\r\n  const success_rate = packet_counter !== 0 ? success_sum / packet_counter : 1;\r\n  const max_duration = 1000;\r\n  let duration_percent = Math.min(1, average_duration / max_duration);\r\n\r\n  let thresholds = {\r\n    0.5: \"C\",\r\n    0.6: \"B\",\r\n    0.7: \"A\",\r\n    0.8: \"A+\",\r\n  };\r\n  const overall_metric = (1 - duration_percent + success_rate) / 2;\r\n  let grade = \"D\";\r\n  for (const threshold in thresholds) {\r\n    if (threshold < overall_metric) {\r\n      grade = thresholds[threshold];\r\n    }\r\n  }\r\n\r\n  const theme = useContext(ThemeContext);\r\n  let grade_style = null;\r\n  if (theme === THEME.TI) {\r\n    grade_style = {\r\n      color: ColorScheme.get_color(\"gray\", THEME.TI),\r\n      fontWeight: 600,\r\n    };\r\n  } else {\r\n    grade_style = {\r\n      color: ColorScheme.get_color(\"white\", THEME.GRUVBOX),\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className=\"at_a_glance_container\">\r\n      <ArcBar\r\n        is_bigger_better={true}\r\n        minLabel=\"0%\"\r\n        maxLabel=\"100%\"\r\n        valueText={`${(success_rate * 100).toFixed(1)}%`}\r\n        valueDescription=\"Success Rate\"\r\n        percentFull={success_rate}\r\n      />\r\n      <ArcBar\r\n        is_bigger_better={false}\r\n        minLabel=\"0\"\r\n        maxLabel={max_duration}\r\n        valueText={`${Math.floor(average_duration)}ms`}\r\n        valueDescription=\"Average Delay\"\r\n        percentFull={duration_percent}\r\n      />\r\n      <h2 style={grade_style} className=\"at_a_glance_grade\">\r\n        Grade: {grade}\r\n      </h2>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/log_icon.a596c9f1.svg\";","export default __webpack_public_path__ + \"static/media/health_icon.a1730e96.svg\";","export default __webpack_public_path__ + \"static/media/delay_icon.512f50d7.svg\";","import React, { useEffect, useRef, useState } from \"react\";\r\nimport reactDom from \"react-dom\";\r\nimport \"../assets/Tooltip.css\";\r\n\r\nfunction TooltipPortal(props) {\r\n  const { top, left } = props.loc;\r\n  const style = {\r\n    transformOrigin: \"center top\",\r\n    transform: `translate(calc(-50% + ${left}px),${top}px)`,\r\n    height: 25,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n  };\r\n\r\n  return reactDom.createPortal(\r\n    <div style={style} className=\"tooltip-text\">\r\n      {props.content || \"N/A\"}\r\n    </div>,\r\n    document.body\r\n  );\r\n}\r\n\r\nexport default function Tooltip(props) {\r\n  const localRef = useRef(null);\r\n  const [left, setLeft] = useState(0);\r\n  const [top, setTop] = useState(0);\r\n  const [shown, setShown] = useState(false);\r\n  useEffect(() => {\r\n    if (!shown) {\r\n      return;\r\n    }\r\n    const boundingRect = localRef.current.getBoundingClientRect();\r\n    const currentLeft = boundingRect.left;\r\n    const currentTop = boundingRect.top + window.scrollY;\r\n    if (top !== currentTop) {\r\n      setTop(currentTop);\r\n    }\r\n    if (left !== currentLeft) {\r\n      setLeft(currentLeft);\r\n    }\r\n  });\r\n  return (\r\n    <div\r\n      className=\"tooltip-container\"\r\n      style={{ width: \"100%\", display: \"relative\" }}\r\n      onMouseEnter={() => setShown(true)}\r\n      onMouseLeave={() => setShown(false)}\r\n    >\r\n      {props.children}\r\n      <div ref={localRef} className=\"tooltip-bottom-center\"></div>\r\n      {shown && (\r\n        <TooltipPortal\r\n          loc={{ top, left }}\r\n          content={props.content}\r\n        ></TooltipPortal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"../assets/Tooltip.css\";\r\nimport Tooltip from \"./Tooltip\";\r\n\r\nexport default function MagnitudeIndicator(props) {\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const height = 21;\r\n\r\n  const background_style = {\r\n    height,\r\n    position: \"relative\",\r\n    width: \"80%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    overflow: \"hidden\",\r\n  };\r\n\r\n  const thresholds = {\r\n    0.33: ColorScheme.get_color(\"green\", theme),\r\n    0.66: ColorScheme.get_color(\"yellow\", theme),\r\n    0.9: ColorScheme.get_color(\"red\", theme),\r\n  };\r\n\r\n  //determine foreground color with threshold\r\n  const value = Math.max(Math.min(1, props.value), 0);\r\n  let foreground_color;\r\n  for (let threshold_val in thresholds) {\r\n    foreground_color = thresholds[threshold_val];\r\n    if (threshold_val > value) {\r\n      break;\r\n    }\r\n  }\r\n  const foreground_style = {\r\n    backgroundColor: foreground_color,\r\n    height,\r\n    width: `${value * 100}%`,\r\n  };\r\n  if (theme === THEME.TI) {\r\n    background_style[\"backgroundColor\"] = ColorScheme.get_color(\"bg0\", theme);\r\n    background_style[\"boxShadow\"] = \"0px 0px 4px rgba(0, 0, 0, 0.3)\";\r\n  } else {\r\n    background_style[\"backgroundColor\"] = ColorScheme.get_color(\"bg1\", theme);\r\n    background_style[\"borderRadius\"] = 9;\r\n    foreground_style[\"borderRadius\"] = 9;\r\n  }\r\n\r\n  for (let key in props.style) {\r\n    background_style[key] = props.style[key];\r\n    foreground_style[key] = props.style[key];\r\n  }\r\n  // const width = (value * 0.9 + 0.15) * 100;\r\n  const width = value * 100;\r\n  return (\r\n    <Tooltip\r\n      style={{ width: \"80%\", left: \"10%\", right: 0 }}\r\n      content={props.tooltip || \"N/A\"}\r\n    >\r\n      <div style={background_style}>\r\n        <motion.div\r\n          animate={{ width }}\r\n          transition={{ duration: 0.5 }}\r\n          initial={false}\r\n          style={foreground_style}\r\n        />\r\n      </div>\r\n    </Tooltip>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/download_icon.87442492.svg\";","function getScrollBarWidth() {\r\n  var inner = document.createElement(\"p\");\r\n  inner.style.width = \"100%\";\r\n  inner.style.height = \"200px\";\r\n\r\n  var outer = document.createElement(\"div\");\r\n  outer.style.position = \"absolute\";\r\n  outer.style.top = \"0px\";\r\n  outer.style.left = \"0px\";\r\n  outer.style.visibility = \"hidden\";\r\n  outer.style.width = \"200px\";\r\n  outer.style.height = \"150px\";\r\n  outer.style.overflow = \"hidden\";\r\n  outer.appendChild(inner);\r\n\r\n  document.body.appendChild(outer);\r\n  var w1 = inner.offsetWidth;\r\n  outer.style.overflow = \"scroll\";\r\n  var w2 = inner.offsetWidth;\r\n  if (w1 === w2) w2 = outer.clientWidth;\r\n\r\n  document.body.removeChild(outer);\r\n\r\n  return w1 - w2;\r\n}\r\n\r\nexport function scrollbarVisible(element) {\r\n  return element.scrollHeight > element.clientHeight;\r\n}\r\nexport const scrollbar_width = getScrollBarWidth();\r\n\r\n//https://stackoverflow.com/questions/13142968/deep-comparison-of-objects-arrays\r\nexport function compareObjects(o, p) {\r\n  return JSON.stringify(o) === JSON.stringify(p);\r\n  // var i,\r\n  //   keysO = Object.keys(o).sort(),\r\n  //   keysP = Object.keys(p).sort();\r\n  // if (keysO.length !== keysP.length) return false; //not the same nr of keys\r\n  // if (keysO.join(\"\") !== keysP.join(\"\")) return false; //different keys\r\n  // for (i = 0; i < keysO.length; ++i) {\r\n  //   if (o[keysO[i]] instanceof Array) {\r\n  //     if (!(p[keysO[i]] instanceof Array)) return false;\r\n  //     //if (compareObjects(o[keysO[i]], p[keysO[i]] === false) return false\r\n  //     //would work, too, and perhaps is a better fit, still, this is easy, too\r\n  //     if (p[keysO[i]].sort().join(\"\") !== o[keysO[i]].sort().join(\"\"))\r\n  //       return false;\r\n  //   } else if (o[keysO[i]] instanceof Date) {\r\n  //     if (!(p[keysO[i]] instanceof Date)) return false;\r\n  //     if (\"\" + o[keysO[i]] !== \"\" + p[keysO[i]]) return false;\r\n  //   } else if (o[keysO[i]] instanceof Function) {\r\n  //     if (!(p[keysO[i]] instanceof Function)) return false;\r\n  //     //ignore functions, or check them regardless?\r\n  //   } else if (o[keysO[i]] instanceof Object) {\r\n  //     if (!(p[keysO[i]] instanceof Object)) return false;\r\n  //     if (o[keysO[i]] === o) {\r\n  //       //self reference?\r\n  //       if (p[keysO[i]] !== p) return false;\r\n  //     } else if (compareObjects(o[keysO[i]], p[keysO[i]]) === false)\r\n  //       return false; //WARNING: does not deal with circular refs other than ^^\r\n  //   }\r\n  //   if (o[keysO[i]] !== p[keysO[i]])\r\n  //     //change !== to != for loose comparison\r\n  //     return false; //not the same value\r\n  // }\r\n  // return true;\r\n}\r\n\r\nexport function mergeObjectsInPlace(target, source) {\r\n  console.assert(typeof target === typeof source);\r\n  //only mutate strings, numbers, booleans\r\n\r\n  if (target instanceof Array) {\r\n    //s -> t (modify)\r\n    const common_length = Math.min(target.length, source.length);\r\n    for (let i = 0; i < common_length; i++) {\r\n      mergeSubEntity(target, source, i);\r\n    }\r\n    //s -> t (add)\r\n    if (target.length < source.length) {\r\n      target.push(...source.slice(target.length));\r\n    } else if (source.length < target.length) {\r\n      //s -> t (remove)\r\n      target.splice(source.length, target.length - source.length);\r\n    }\r\n  } else if (typeof target === \"object\") {\r\n    //s -> t (modify)\r\n    for (const t_key in target) {\r\n      if (t_key in source && target[t_key] !== source[t_key]) {\r\n        mergeSubEntity(target, source, t_key);\r\n      }\r\n    }\r\n    //s -> t (add)\r\n    const new_s_keys = Object.keys(source).filter(\r\n      (s_key) => !(s_key in target)\r\n    );\r\n    new_s_keys.forEach((s_key) => {\r\n      target[s_key] = source[s_key];\r\n    });\r\n    //s -> t (remove)\r\n    const t_keys_to_remove = Object.keys(target).filter(\r\n      (t_key) => !(t_key in source)\r\n    );\r\n    t_keys_to_remove.forEach((t_key) => {\r\n      delete target[t_key];\r\n    });\r\n  }\r\n\r\n  function mergeSubEntity(target, source, key) {\r\n    const s_val = source[key];\r\n    const s_val_type = typeof s_val;\r\n    if (\r\n      s_val_type === \"string\" ||\r\n      s_val_type === \"number\" ||\r\n      s_val_type === \"boolean\"\r\n    ) {\r\n      target[key] = s_val;\r\n    } else {\r\n      mergeObjectsInPlace(target[key], s_val);\r\n    }\r\n  }\r\n}\r\n\r\nexport function timestamp_string_to_date(timestamp) {\r\n  //example timestamp string \"10/31/2021, 10:49:35 AM 221ms\"\r\n  const date_regex_matches = timestamp.match(/(.*) (\\d{1,3})ms/);\r\n  //index 0 is the entire timestamp string\r\n  //index 1 is date time w/o ms\r\n  // index 2 is ms\r\n  if (date_regex_matches.length < 3) {\r\n    console.error(\"Could not convert timesatm string: \", timestamp);\r\n  }\r\n  const date_without_ms = date_regex_matches[1];\r\n  const ms = parseInt(date_regex_matches[2]);\r\n  const converted_date = new Date(date_without_ms);\r\n  converted_date.setMilliseconds(ms);\r\n  return converted_date;\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\nimport { FixedSizeList, areEqual } from \"react-window\";\r\nimport {\r\n  scrollbarVisible as getScrollbarVisible,\r\n  scrollbar_width,\r\n} from \"../utils.js\";\r\nimport produce from \"immer\";\r\nimport \"../assets/FlexTable.css\";\r\n\r\nconst divider_height = 2;\r\n\r\nclass HeaderDatum extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.refContainer = React.createRef();\r\n    this.width = null;\r\n    this.ro = null;\r\n  }\r\n  componentDidMount() {\r\n    this.ro = new ResizeObserver((entries) => {\r\n      console.assert(entries.length === 1);\r\n      const newWidth = entries[0].target.clientWidth;\r\n      if (newWidth !== this.width) {\r\n        this.props.widthCallback(newWidth);\r\n        this.width = newWidth;\r\n      }\r\n    });\r\n    this.ro.observe(this.refContainer.current);\r\n  }\r\n  componentWillUnmount() {\r\n    return () => this.ro.disconnect();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"flex_table_datum\"\r\n        ref={this.refContainer}\r\n        style={this.props.style}\r\n      >\r\n        {this.props.headerValue}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function FlexTable(props) {\r\n  const [columnWidths, setColumnWidths] = useState(\r\n    props.table_format.map(() => -1)\r\n  );\r\n  // Theming\r\n  const theme = useContext(ThemeContext);\r\n  let body_bg_color = ColorScheme.get_color(\"bg2\", theme);\r\n  let header_fg_color = null;\r\n  let header_bg_color = null;\r\n  let body_fg_color = null;\r\n  let borderRadius = null;\r\n  let table_box_shadow = null;\r\n  let row_rule_color = null;\r\n  if (theme === THEME.TI) {\r\n    header_bg_color = ColorScheme.get_color(\"red\", theme);\r\n    header_fg_color = ColorScheme.get_color(\"white\", theme);\r\n    body_fg_color = ColorScheme.get_color(\"gray\", theme);\r\n    borderRadius = 0;\r\n    table_box_shadow = \"0px 1px 14px rgba(0, 0, 0, 0.3)\";\r\n    row_rule_color = ColorScheme.get_color(\"gray_light\", theme);\r\n  } else {\r\n    header_bg_color = ColorScheme.get_color(\"bg3\", theme);\r\n    header_fg_color = ColorScheme.get_color(\"white\", theme);\r\n    body_fg_color = ColorScheme.get_color(\"white\", theme);\r\n    row_rule_color = ColorScheme.get_color(\"bg1\", theme);\r\n    borderRadius = 9;\r\n  }\r\n  const main_table_style = {\r\n    color: body_fg_color,\r\n    backgroundColor: body_bg_color,\r\n    boxShadow: table_box_shadow,\r\n    borderRadius: `0 0 ${borderRadius} ${borderRadius}`,\r\n  };\r\n\r\n  function width_callback_generator(index) {\r\n    return (width) => {\r\n      setColumnWidths(\r\n        produce(columnWidths, (draft) => {\r\n          draft[index] = width;\r\n        })\r\n      );\r\n    };\r\n  }\r\n\r\n  const table_headers = props.table_format.map((col_format, index) => {\r\n    return (\r\n      <HeaderDatum\r\n        widthCallback={width_callback_generator(index)}\r\n        key={col_format.headerValue}\r\n        {...col_format}\r\n      />\r\n    );\r\n  });\r\n\r\n  const data_to_elements_mapper = props.dataToElementsMapper;\r\n  const total_columns = props.table_format.length;\r\n  const itemData = props.itemData;\r\n\r\n  const RowRenderer = (row_props) => {\r\n    const elements = data_to_elements_mapper(row_props.index, itemData, {\r\n      columnWidths,\r\n    });\r\n    console.assert(elements.length === total_columns);\r\n    const wrapped_elems = elements.map((ele, index) => {\r\n      let datum_style = props.table_format[index].style;\r\n      return (\r\n        <div className=\"flex_table_datum\" style={datum_style} key={index}>\r\n          {ele}\r\n        </div>\r\n      );\r\n    });\r\n    const body_row_style = {\r\n      borderBottom: `${divider_height}px solid ${row_rule_color}`,\r\n    };\r\n    return (\r\n      <div\r\n        style={{ ...row_props.style, ...body_row_style }}\r\n        className=\"flex_table_row\"\r\n      >\r\n        {wrapped_elems}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const [scrollbarVisible, setScrollbarVisible] = useState(false);\r\n  const outerRef = useRef(null);\r\n  useEffect(() => {\r\n    const newScrollbarVisible = getScrollbarVisible(outerRef.current);\r\n    if (newScrollbarVisible !== scrollbarVisible) {\r\n      setScrollbarVisible(newScrollbarVisible);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          borderTopLeftRadius: borderRadius,\r\n          borderTopRightRadius: borderRadius,\r\n          paddingRight: scrollbarVisible ? scrollbar_width : 0,\r\n          color: header_fg_color,\r\n          backgroundColor: header_bg_color,\r\n          height: props.rowHeight,\r\n        }}\r\n        className=\"flex_table_row\"\r\n      >\r\n        {table_headers}\r\n      </div>\r\n      <FixedSizeList\r\n        outerRef={outerRef}\r\n        className={\"flex_table \".concat(theme)}\r\n        style={main_table_style}\r\n        height={props.rowHeight * props.numVisibleRows}\r\n        itemCount={props.itemCount}\r\n        itemSize={props.rowHeight}\r\n        width=\"100%\"\r\n        itemKey={(index) => props.rowKeyGenerator(index, props.itemData)}\r\n        overscanCount={5}\r\n      >\r\n        {RowRenderer}\r\n      </FixedSizeList>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport MagnitudeIndicator from \"./MagnitudeIndicator\";\r\nimport download_icon from \"../icons/download_icon.svg\";\r\nimport { get_ip_address_info_by_ip } from \"../App\";\r\nimport FlexTable from \"./FlexTable\";\r\nimport { sort } from \"d3-array\";\r\nimport { timestamp_string_to_date } from \"../utils\";\r\nconst duration_max_baseline = 600;\r\n\r\nfunction pingDataToElementsMapper(index, data) {\r\n  const ping_info = data.records[index];\r\n  const start_matches = ping_info.start.match(/(\\d{1,2}:\\d{1,2}:\\d{1,2}.*M)/);\r\n  const start = start_matches[1];\r\n  const ip_info = get_ip_address_info_by_ip(\r\n    data.ip_address_info_array,\r\n    ping_info.dest_ip\r\n  );\r\n  const ping_cols = [\r\n    \"\", //toggle filler\r\n    ping_info.burst_id,\r\n    ip_info ? ip_info.nickname : \"N/A\",\r\n    start,\r\n    <MagnitudeIndicator\r\n      value={ping_info.duration / duration_max_baseline}\r\n      tooltip={`${ping_info.duration.toFixed(2)}ms`}\r\n    />,\r\n  ];\r\n  return ping_cols;\r\n}\r\n\r\nexport default function PingLog(props) {\r\n  let download_url = \"#\";\r\n  try {\r\n    download_url = new URL(\"Ping_Results.csv\", document.ping_api_location);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  const csv_download_button = (\r\n    // <a href={}>\r\n    <img\r\n      style={{\r\n        cursor: \"pointer\",\r\n      }}\r\n      alt=\"download\"\r\n      onClick={() => window.open(download_url)}\r\n      src={download_icon}\r\n    ></img>\r\n    // </a>\r\n  );\r\n  const table_format = [\r\n    {\r\n      headerValue: csv_download_button,\r\n      style: {\r\n        flexBasis: \"45px\",\r\n        flexGrow: \"0\",\r\n      },\r\n    },\r\n    {\r\n      headerValue: \"Burst ID\",\r\n      style: {\r\n        flexGrow: \"1\",\r\n      },\r\n    },\r\n    {\r\n      headerValue: \"Destination\",\r\n      style: {\r\n        flexGrow: \"1\",\r\n      },\r\n    },\r\n    {\r\n      headerValue: \"Start\",\r\n      style: {\r\n        flexGrow: \"1\",\r\n      },\r\n    },\r\n\r\n    {\r\n      headerValue: \"Duration [ms]\",\r\n      style: {\r\n        flexGrow: \"1\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row_data = {\r\n    ip_address_info_array: props.ip_address_info_array,\r\n    records: [],\r\n    table_format,\r\n  };\r\n\r\n  props.pingbursts.forEach((burst) => {\r\n    burst.records.forEach((record) => {\r\n      row_data.records.push({\r\n        ...record,\r\n        burst_id: burst.id,\r\n        startDate: timestamp_string_to_date(record.start),\r\n      });\r\n    });\r\n  });\r\n  // the startDate is minus in order to sort form latest -> oldest\r\n  row_data.records = sort(row_data.records, (datum) => -datum.startDate);\r\n\r\n  const tableProps = {\r\n    itemCount: row_data.records.length,\r\n    rowKeyGenerator: (index, row_data) => {\r\n      const ping_info = row_data.records[index];\r\n      return `${ping_info.start} ${ping_info.burst_id}`;\r\n    },\r\n    itemData: row_data,\r\n    dataToElementsMapper: pingDataToElementsMapper,\r\n    table_format,\r\n    rowHeight: 50,\r\n    numVisibleRows: 8,\r\n  };\r\n\r\n  return <FlexTable {...tableProps}></FlexTable>;\r\n}\r\n","import React from \"react\";\r\nimport Tile from \"./Tile\";\r\nimport * as d3 from \"d3\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\n\r\nfunction timestamp_string_to_date(timestamp) {\r\n  //example timestamp string \"10/31/2021, 10:49:35 AM 221ms\"\r\n  const date_regex_matches = timestamp.match(/(.*) (\\d{1,3})ms/);\r\n  //index 0 is the entire timestamp string\r\n  //index 1 is date time w/o ms\r\n  // index 2 is ms\r\n  if (date_regex_matches.length < 3) {\r\n    console.error(\"Could not convert timesatm string: \", timestamp);\r\n  }\r\n  const date_without_ms = date_regex_matches[1];\r\n  const ms = parseInt(date_regex_matches[2]);\r\n  const converted_date = new Date(date_without_ms);\r\n  converted_date.setMilliseconds(ms);\r\n  return converted_date;\r\n}\r\n\r\nfunction ip_series(pingbursts, dest_ip, label, color) {\r\n  let data = [];\r\n  for (let pingburst of pingbursts) {\r\n    const valid_pingburst =\r\n      pingburst.records.length !== 0 &&\r\n      pingburst.records[0].dest_ip === dest_ip;\r\n    if (!valid_pingburst) {\r\n      continue;\r\n    }\r\n    for (let record of pingburst.records) {\r\n      data.push({\r\n        start: timestamp_string_to_date(record.start),\r\n        duration: record.duration,\r\n      });\r\n    }\r\n  }\r\n  data = d3.sort(data, (datum) => datum.start);\r\n  return { data, color, id: dest_ip, label };\r\n}\r\nclass NetworkDelayChart extends React.Component {\r\n  static contextType = ThemeContext;\r\n\r\n  state = {\r\n    series_paths: [],\r\n  };\r\n  aspect_ratio = 19 / 15;\r\n  viewportHeight = 401;\r\n  viewportWidth = this.aspect_ratio * this.viewportHeight;\r\n  margin = {\r\n    top: 50,\r\n    bottom: 50,\r\n    right: 80,\r\n    left: 80,\r\n  };\r\n  x_axis_ref = React.createRef();\r\n  y_axis_ref = React.createRef();\r\n  x_gridlines_ref = React.createRef();\r\n  y_gridlines_ref = React.createRef();\r\n  x_scale = d3\r\n    .scaleTime()\r\n    .range([this.margin.left, this.viewportWidth - this.margin.right]);\r\n  y_scale = d3\r\n    .scaleLinear()\r\n    .range([this.viewportHeight - this.margin.bottom, this.margin.top]);\r\n  x_axis = d3.axisBottom().scale(this.x_scale).ticks(d3.timeMinute.every(1));\r\n  x_gridlines = d3\r\n    .axisBottom()\r\n    .scale(this.x_scale)\r\n    .ticks(d3.timeMinute.every(1))\r\n    .tickSize(-this.viewportHeight + this.margin.top + this.margin.bottom, 0)\r\n    .tickFormat(\"\");\r\n  y_axis = d3.axisLeft().scale(this.y_scale);\r\n  y_gridlines = d3\r\n    .axisLeft()\r\n    .scale(this.y_scale)\r\n    // .ticks(20)\r\n    .tickSize(-this.viewportWidth + this.margin.right + this.margin.left, 0)\r\n    .tickFormat(\"\");\r\n  lineGenerator = d3\r\n    .line()\r\n    .x((datum) => this.x_scale(datum.start))\r\n    .y((datum) => this.y_scale(datum.duration))\r\n    .defined((datum) => datum.duration !== -1);\r\n\r\n  // .tickSizeOuter(0);\r\n  //   const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\r\n  componentDidUpdate() {\r\n    d3.select(this.x_axis_ref.current).call(this.x_axis);\r\n    d3.select(this.y_axis_ref.current).call(this.y_axis);\r\n    d3.select(this.x_gridlines_ref.current).call(this.x_gridlines);\r\n    d3.select(this.y_gridlines_ref.current).call(this.y_gridlines);\r\n  }\r\n  componentDidMount() {\r\n    d3.select(this.x_gridlines_ref.current).call(this.x_gridlines);\r\n    d3.select(this.y_gridlines_ref.current).call(this.y_gridlines);\r\n    d3.select(this.x_axis_ref.current).call(this.x_axis);\r\n    d3.select(this.y_axis_ref.current).call(this.y_axis);\r\n  }\r\n\r\n  render() {\r\n    const theme = this.context;\r\n\r\n    let text_color = null;\r\n    let grid_color = null;\r\n    if (theme === THEME.TI) {\r\n      text_color = ColorScheme.get_color(\"gray\", theme);\r\n      grid_color = ColorScheme.get_color_with_opacity(\"gray_light\", 0.6, theme);\r\n    } else {\r\n      text_color = ColorScheme.get_color(\"white\", theme);\r\n      grid_color = ColorScheme.get_color_with_opacity(\"gray\", 0.6, theme);\r\n    }\r\n    let available_line_colors = [\"blue\", \"green\", \"yellow\", \"orange\"].map(\r\n      (color_name) => ColorScheme.get_color(color_name, theme)\r\n    );\r\n\r\n    const { pingbursts, ip_address_info_array } = this.props;\r\n    const series_array = ip_address_info_array\r\n      .filter((info) => info.is_selected)\r\n      .map((info, index) => {\r\n        return ip_series(\r\n          pingbursts,\r\n          info.ip_address,\r\n          info.nickname,\r\n          available_line_colors[index % available_line_colors.length]\r\n        );\r\n      });\r\n\r\n    const start = new Date();\r\n    start.setMinutes(start.getMinutes() - 5);\r\n    const finish = new Date();\r\n\r\n    //cull_times\r\n    for (const series of series_array) {\r\n      series.data = series.data.filter(\r\n        (datum) => start < datum.start && datum.start < finish\r\n      );\r\n    }\r\n    //make domain\r\n    this.x_scale.domain([start, finish]);\r\n\r\n    const all_y_maxes = series_array.map((series) =>\r\n      d3.max(series.data, (datum) => datum.duration)\r\n    );\r\n    const max = d3.max(all_y_maxes);\r\n    this.y_scale.domain([0, max]);\r\n\r\n    const series_paths = series_array.map((series) => {\r\n      return {\r\n        ...series,\r\n        d_string: this.lineGenerator(series.data),\r\n      };\r\n    });\r\n\r\n    const lines = series_paths.map((path) => (\r\n      <path\r\n        fill=\"none\"\r\n        key={path.id}\r\n        stroke={path.color}\r\n        strokeWidth=\"2\"\r\n        d={path.d_string}\r\n      ></path>\r\n    ));\r\n\r\n    const legend_elements = series_paths.map((path, index) => {\r\n      const side = 14;\r\n      const spacing = side * 1.5;\r\n      return (\r\n        <g transform={`translate(5,${spacing * index})`}>\r\n          <rect fill={path.color} width={`${side}`} height={`${side}`}></rect>\r\n          <text\r\n            fill={text_color}\r\n            style={{ fontSize: 12 }}\r\n            textAnchor=\"start\"\r\n            dx=\"20\"\r\n            dy=\"12\"\r\n          >\r\n            {path.label}\r\n          </text>\r\n        </g>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <svg\r\n        style={{ width: \"100%\", color: text_color, overflow: \"visible\" }}\r\n        viewBox={`0 0 ${this.viewportWidth} ${this.viewportHeight}`}\r\n        preserveAspectRatio={\"xMidYMid\"}\r\n      >\r\n        {lines}\r\n        <g\r\n          ref={this.x_axis_ref}\r\n          transform={`translate(0, ${\r\n            this.viewportHeight - this.margin.bottom\r\n          })`}\r\n        />\r\n        <g\r\n          ref={this.x_gridlines_ref}\r\n          style={{ color: grid_color }}\r\n          transform={`translate(0, ${\r\n            this.viewportHeight - this.margin.bottom\r\n          })`}\r\n        />\r\n        <g\r\n          ref={this.y_gridlines_ref}\r\n          transform={`translate(${this.margin.left}, 0)`}\r\n          style={{ color: grid_color }}\r\n        />\r\n        <g\r\n          ref={this.y_axis_ref}\r\n          transform={`translate(${this.margin.left}, 0)`}\r\n        />\r\n        <g\r\n          transform={`translate(${this.margin.left / 3}, ${\r\n            (this.viewportHeight - this.margin.top - this.margin.bottom) / 2 +\r\n            this.margin.top\r\n          })`}\r\n        >\r\n          <g transform=\"rotate(-90)\" textAnchor=\"middle\">\r\n            <text fill={text_color}>Duration [ms]</text>\r\n          </g>\r\n        </g>\r\n\r\n        <g\r\n          textAnchor=\"middle\"\r\n          transform={`translate(${\r\n            (this.viewportWidth - this.margin.left - this.margin.right) / 2 +\r\n            this.margin.left\r\n          },${this.viewportHeight})`}\r\n        >\r\n          <text fill={text_color}>Start Time</text>\r\n        </g>\r\n        <g\r\n          textAnchor=\"middle\"\r\n          transform={`translate(${\r\n            (this.viewportWidth - this.margin.left - this.margin.right) / 2 +\r\n            this.margin.left\r\n          },${this.margin.top / 2})`}\r\n        >\r\n          <text\r\n            transform=\"scale(1.5,1.5)\"\r\n            fill={text_color}\r\n            style={{ fontWeight: 600 }}\r\n          >\r\n            Node Delay vs. Time\r\n          </text>\r\n        </g>\r\n        <g\r\n          transform={`translate(${this.viewportWidth - this.margin.right},${\r\n            this.margin.top\r\n          })`}\r\n        >\r\n          {legend_elements}\r\n        </g>\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class DelayMonitor extends React.Component {\r\n  render() {\r\n    return (\r\n      <Tile omit_header={true}>\r\n        <div\r\n          style={{\r\n            width: \"90%\",\r\n            marginTop: 20,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginBottom: 60,\r\n          }}\r\n        >\r\n          <NetworkDelayChart {...this.props} />\r\n        </div>\r\n      </Tile>\r\n    );\r\n  }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\n\r\nexport default function BarChart(props) {\r\n  const results_map = props.results_map;\r\n  const results_array = [...results_map.values()];\r\n\r\n  const color_map = props.category_color_map;\r\n  const data = results_array.map((result) => result.average_success);\r\n  const backgroundColor = results_array.map((result) => {\r\n    return color_map[result.health_category].background;\r\n  });\r\n  const borderColor = results_array.map(\r\n    (result) => color_map[result.health_category].border\r\n  );\r\n\r\n  const theme = useContext(ThemeContext);\r\n  let text_color = null;\r\n  let grid_color = null;\r\n  if (theme === THEME.TI) {\r\n    text_color = ColorScheme.get_color(\"gray\", theme);\r\n    grid_color = ColorScheme.get_color_with_opacity(\"gray_light\", 0.6, theme);\r\n  } else {\r\n    text_color = ColorScheme.get_color(\"white\", theme);\r\n    grid_color = ColorScheme.get_color_with_opacity(\"gray\", 0.6, theme);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Bar\r\n        data={{\r\n          labels: [...results_map.keys()],\r\n          datasets: [\r\n            {\r\n              // label: \"average success rate\",\r\n              data,\r\n              backgroundColor,\r\n              borderColor,\r\n              borderWidth: 2,\r\n            },\r\n          ],\r\n        }}\r\n        height={400} //\r\n        // width={200}\r\n        color={text_color}\r\n        options={{\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: \"Average Success Rate per Network Node\",\r\n              color: text_color,\r\n              align: \"center\",\r\n              font: {\r\n                size: 24,\r\n                weight: \"600\",\r\n                family: \"Raleway\",\r\n              },\r\n            },\r\n\r\n            legend: {\r\n              display: false,\r\n            },\r\n          },\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            y: {\r\n              max: 100,\r\n              beginAtZero: true,\r\n              ticks: {\r\n                color: text_color,\r\n              },\r\n              grid: {\r\n                color: grid_color,\r\n              },\r\n              title: {\r\n                display: true,\r\n                text: \"Percent Success\",\r\n                color: text_color,\r\n                align: \"center\",\r\n                font: {\r\n                  size: 18,\r\n                  weight: \"400\",\r\n                  family: \"Raleway\",\r\n                },\r\n              },\r\n            },\r\n            x: {\r\n              ticks: {\r\n                color: text_color,\r\n                font: {\r\n                  weight: \"600\",\r\n                  family: \"Raleway\",\r\n                },\r\n              },\r\n              grid: {\r\n                color: grid_color,\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\nimport { HEALTH_CATEGORY } from \"./HealthMonitor\";\r\n\r\nexport default function PieChart(props) {\r\n  const results_map = props.results_map;\r\n  const results_array = [...results_map.values()];\r\n  const category_map = new Map();\r\n\r\n  const color_map = props.category_color_map;\r\n\r\n  function constructCategory(health_category) {\r\n    const filtered_results = results_array.filter(\r\n      (result) => result.health_category === health_category\r\n    );\r\n    category_map.set(health_category, filtered_results);\r\n  }\r\n  constructCategory(HEALTH_CATEGORY.URGENT);\r\n  constructCategory(HEALTH_CATEGORY.POOR);\r\n  constructCategory(HEALTH_CATEGORY.FAIR);\r\n  constructCategory(HEALTH_CATEGORY.GOOD);\r\n\r\n  const theme = useContext(ThemeContext);\r\n  let text_color = null;\r\n  if (theme === THEME.TI) {\r\n    text_color = ColorScheme.get_color(\"gray\", theme);\r\n  } else {\r\n    text_color = ColorScheme.get_color(\"white\", theme);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Pie\r\n        data={{\r\n          labels: [...category_map.keys()],\r\n          datasets: [\r\n            {\r\n              data: [...category_map.values()].map((x) => x.length),\r\n              backgroundColor: [...category_map.keys()].map(\r\n                (category) => color_map[category].background\r\n              ),\r\n              borderColor: [...category_map.keys()].map(\r\n                (category) => color_map[category].border\r\n              ),\r\n              borderWidth: 2,\r\n            },\r\n          ],\r\n        }}\r\n        height={400}\r\n        // width=\"100%\"\r\n        options={{\r\n          plugins: {\r\n            title: {\r\n              display: true,\r\n              text: \"Average Success Rate of Network Nodes\",\r\n              color: text_color,\r\n              align: \"center\",\r\n              font: {\r\n                size: 24,\r\n                weight: \"600\",\r\n                family: \"Raleway\",\r\n              },\r\n            },\r\n            legend: {\r\n              labels: {\r\n                fontSize: 25,\r\n                color: text_color,\r\n              },\r\n            },\r\n          },\r\n          maintainAspectRatio: false,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Tile from \"./Tile\";\r\nimport * as d3 from \"d3\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\n\r\nfunction timestamp_string_to_date(timestamp) {\r\n  //example timestamp string \"10/31/2021, 10:49:35 AM 221ms\"\r\n  const date_regex_matches = timestamp.match(/(.*) (\\d{1,3})ms/);\r\n  //index 0 is the entire timestamp string\r\n  //index 1 is date time w/o ms\r\n  // index 2 is ms\r\n  if (date_regex_matches.length < 3) {\r\n    console.error(\"Could not convert timesatm string: \", timestamp);\r\n  }\r\n  const date_without_ms = date_regex_matches[1];\r\n  const ms = parseInt(date_regex_matches[2]);\r\n  const converted_date = new Date(date_without_ms);\r\n  converted_date.setMilliseconds(ms);\r\n  return converted_date;\r\n}\r\n\r\nfunction average(array) {\r\n  return array.reduce((acc, cur) => acc + cur, 0) / array.length;\r\n}\r\n\r\nfunction ip_series(pingbursts, dest_ip, label, color) {\r\n  let data = [];\r\n  for (let pingburst of pingbursts) {\r\n    const valid_pingburst =\r\n      pingburst.records.length !== 0 &&\r\n      pingburst.records[0].dest_ip === dest_ip;\r\n    if (!valid_pingburst) {\r\n      continue;\r\n    }\r\n    for (let record of pingburst.records) {\r\n      data.push({\r\n        start: timestamp_string_to_date(record.start),\r\n        was_success: record.was_success,\r\n      });\r\n    }\r\n  }\r\n  data = d3.sort(data, (datum) => datum.start);\r\n  let cumulative_average = null;\r\n  function datumWasSuccessNum(datum) {\r\n    return datum.was_success ? 1 : 0;\r\n  }\r\n\r\n  const NUM_PREVIOUS = 8; //for moving point average\r\n  data.forEach((datum, index) => {\r\n    const lowerBound = Math.max(0, index - NUM_PREVIOUS); //inclusive\r\n    const upperBound = index + 1; //noninclusive\r\n    datum[\"movingAverage\"] = average(\r\n      Array.from(data.slice(lowerBound, upperBound), datumWasSuccessNum)\r\n    );\r\n    if (cumulative_average === null) {\r\n      cumulative_average = datumWasSuccessNum(datum);\r\n    } else {\r\n      cumulative_average =\r\n        (cumulative_average * index + datumWasSuccessNum(datum)) / (index + 1);\r\n    }\r\n    datum[\"cumulativeAverage\"] = cumulative_average;\r\n  });\r\n  return { data, color, id: dest_ip, label };\r\n}\r\nexport default class ErrorRateLineChart extends React.Component {\r\n  static contextType = ThemeContext;\r\n\r\n  state = {\r\n    series_paths: [],\r\n  };\r\n  aspect_ratio = 19 / 15;\r\n  viewportHeight = 401;\r\n  viewportWidth = this.aspect_ratio * this.viewportHeight;\r\n  margin = {\r\n    top: 50,\r\n    bottom: 50,\r\n    right: 80,\r\n    left: 80,\r\n  };\r\n  x_axis_ref = React.createRef();\r\n  y_axis_ref = React.createRef();\r\n  x_gridlines_ref = React.createRef();\r\n  y_gridlines_ref = React.createRef();\r\n  x_scale = d3\r\n    .scaleTime()\r\n    .range([this.margin.left, this.viewportWidth - this.margin.right]);\r\n  y_scale = d3\r\n    .scaleLinear()\r\n    .range([this.viewportHeight - this.margin.bottom, this.margin.top]);\r\n  x_axis = d3.axisBottom().scale(this.x_scale).ticks(d3.timeMinute.every(1));\r\n  x_gridlines = d3\r\n    .axisBottom()\r\n    .scale(this.x_scale)\r\n    .ticks(d3.timeMinute.every(1))\r\n    .tickSize(-this.viewportHeight + this.margin.top + this.margin.bottom, 0)\r\n    .tickFormat(\"\");\r\n  y_axis = d3.axisLeft().scale(this.y_scale);\r\n  y_gridlines = d3\r\n    .axisLeft()\r\n    .scale(this.y_scale)\r\n    // .ticks(20)\r\n    .tickSize(-this.viewportWidth + this.margin.right + this.margin.left, 0)\r\n    .tickFormat(\"\");\r\n  movingAveragelineGenerator = d3\r\n    .line()\r\n    .curve(d3.curveBumpX)\r\n    .x((datum) => this.x_scale(datum.start))\r\n    .y((datum) => this.y_scale(datum.movingAverage));\r\n  cumulativeAveragelineGenerator = d3\r\n    .line()\r\n    .x((datum) => this.x_scale(datum.start))\r\n    .y((datum) => this.y_scale(datum.cumulativeAverage));\r\n\r\n  // .tickSizeOuter(0);\r\n  //   const yAxis = d3.axisLeft(yScale).ticks(height / 40, yFormat);\r\n  componentDidUpdate() {\r\n    this.y_scale.domain([0, 100]);\r\n    d3.select(this.x_axis_ref.current).call(this.x_axis);\r\n    d3.select(this.y_axis_ref.current).call(this.y_axis);\r\n    d3.select(this.x_gridlines_ref.current).call(this.x_gridlines);\r\n    d3.select(this.y_gridlines_ref.current).call(this.y_gridlines);\r\n  }\r\n  componentDidMount() {\r\n    this.y_scale.domain([0, 100]);\r\n    d3.select(this.x_gridlines_ref.current).call(this.x_gridlines);\r\n    d3.select(this.y_gridlines_ref.current).call(this.y_gridlines);\r\n    d3.select(this.x_axis_ref.current).call(this.x_axis);\r\n    d3.select(this.y_axis_ref.current).call(this.y_axis);\r\n  }\r\n\r\n  render() {\r\n    const theme = this.context;\r\n\r\n    let text_color = null;\r\n    let grid_color = null;\r\n    if (theme === THEME.TI) {\r\n      text_color = ColorScheme.get_color(\"gray\", theme);\r\n      grid_color = ColorScheme.get_color_with_opacity(\"gray_light\", 0.6, theme);\r\n    } else {\r\n      text_color = ColorScheme.get_color(\"white\", theme);\r\n      grid_color = ColorScheme.get_color_with_opacity(\"gray\", 0.6, theme);\r\n    }\r\n    let available_line_colors = [\"blue\", \"green\", \"yellow\", \"orange\"].map(\r\n      (color_name) => ColorScheme.get_color(color_name, theme)\r\n    );\r\n\r\n    const { pingbursts, ip_address_info_array } = this.props;\r\n    const series_array = ip_address_info_array\r\n      .filter((info) => info.is_selected)\r\n      .map((info, index) => {\r\n        return ip_series(\r\n          pingbursts,\r\n          info.ip_address,\r\n          info.nickname,\r\n          available_line_colors[index % available_line_colors.length]\r\n        );\r\n      });\r\n\r\n    const start = new Date();\r\n    start.setMinutes(start.getMinutes() - 5);\r\n    const finish = new Date();\r\n\r\n    //cull_times\r\n    for (const series of series_array) {\r\n      series.data = series.data.filter(\r\n        (datum) => start < datum.start && datum.start < finish\r\n      );\r\n    }\r\n    //make domain\r\n    this.x_scale.domain([start, finish]);\r\n    this.y_scale.domain([0, 1]);\r\n    const series_paths = series_array.map((series) => {\r\n      return {\r\n        ...series,\r\n        cum_ave_d_string: this.movingAveragelineGenerator(series.data),\r\n        mov_ave_d_string: this.cumulativeAveragelineGenerator(series.data),\r\n      };\r\n    });\r\n    console.log(series_paths);\r\n\r\n    const lines = series_paths.map((path) => {\r\n      return (\r\n        // <g key={path.id}>\r\n        <>\r\n          <path\r\n            fill=\"none\"\r\n            stroke={path.color}\r\n            d={path.cum_ave_d_string}\r\n            strokeWidth=\"3\"\r\n          ></path>\r\n          <path\r\n            fill=\"none\"\r\n            stroke={path.color}\r\n            strokeDasharray=\"3\"\r\n            d={path.mov_ave_d_string}\r\n          ></path>\r\n        </>\r\n      );\r\n    });\r\n\r\n    const legend_elements = series_paths.map((path, index) => {\r\n      const side = 14;\r\n      const spacing = side * 1.5;\r\n      return (\r\n        <g transform={`translate(5,${spacing * index})`}>\r\n          <rect fill={path.color} width={`${side}`} height={`${side}`}></rect>\r\n          <text\r\n            fill={text_color}\r\n            style={{ fontSize: 12 }}\r\n            textAnchor=\"start\"\r\n            dx=\"20\"\r\n            dy=\"12\"\r\n          >\r\n            {path.label}\r\n          </text>\r\n        </g>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <svg\r\n        style={{ width: \"100%\", color: text_color, overflow: \"visible\" }}\r\n        viewBox={`0 0 ${this.viewportWidth} ${this.viewportHeight}`}\r\n        preserveAspectRatio={\"xMidYMid\"}\r\n      >\r\n        {lines}\r\n        <g\r\n          ref={this.x_axis_ref}\r\n          transform={`translate(0, ${\r\n            this.viewportHeight - this.margin.bottom\r\n          })`}\r\n        />\r\n        <g\r\n          ref={this.x_gridlines_ref}\r\n          style={{ color: grid_color }}\r\n          transform={`translate(0, ${\r\n            this.viewportHeight - this.margin.bottom\r\n          })`}\r\n        />\r\n        <g\r\n          ref={this.y_gridlines_ref}\r\n          transform={`translate(${this.margin.left}, 0)`}\r\n          style={{ color: grid_color }}\r\n        />\r\n        <g\r\n          ref={this.y_axis_ref}\r\n          transform={`translate(${this.margin.left}, 0)`}\r\n        />\r\n        <g\r\n          transform={`translate(${this.margin.left / 3}, ${\r\n            (this.viewportHeight - this.margin.top - this.margin.bottom) / 2 +\r\n            this.margin.top\r\n          })`}\r\n        >\r\n          <g transform=\"rotate(-90)\" textAnchor=\"middle\">\r\n            <text fill={text_color}>Success Rate %</text>\r\n          </g>\r\n        </g>\r\n\r\n        <g\r\n          textAnchor=\"middle\"\r\n          transform={`translate(${\r\n            (this.viewportWidth - this.margin.left - this.margin.right) / 2 +\r\n            this.margin.left\r\n          },${this.viewportHeight})`}\r\n        >\r\n          <text fill={text_color}>Start Time</text>\r\n        </g>\r\n        <g\r\n          textAnchor=\"middle\"\r\n          transform={`translate(${\r\n            (this.viewportWidth - this.margin.left - this.margin.right) / 2 +\r\n            this.margin.left\r\n          },${this.margin.top / 2})`}\r\n        >\r\n          <text\r\n            transform=\"scale(1.5,1.5)\"\r\n            fill={text_color}\r\n            style={{ fontWeight: 600 }}\r\n          >\r\n            Success Rate vs. Time\r\n          </text>\r\n        </g>\r\n        <g\r\n          transform={`translate(${this.viewportWidth - this.margin.right},${\r\n            this.margin.top\r\n          })`}\r\n        >\r\n          {legend_elements}\r\n        </g>\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n","import Tile from \"./Tile\";\r\nimport BarChart from \"./BarChart\";\r\nimport PieChart from \"./PieChart\";\r\nimport { get_ip_address_info_by_ip } from \"../App\";\r\nimport { useContext } from \"react\";\r\nimport { ColorScheme, ThemeContext } from \"../ColorScheme\";\r\nimport ErrorRateLineChart from \"./ErrorRateLineChart\";\r\n\r\n// the values of the enum will be labels of graphs\r\nexport const HEALTH_CATEGORY = {\r\n  URGENT: \"0%-30%\",\r\n  POOR: \"30%-60%\",\r\n  FAIR: \"60%-90%\",\r\n  GOOD: \"90%-100%\",\r\n};\r\nObject.freeze(HEALTH_CATEGORY);\r\n\r\nfunction success_rate_to_category(success_rate) {\r\n  if (success_rate <= 30) {\r\n    return HEALTH_CATEGORY.URGENT;\r\n  } else if (success_rate <= 60) {\r\n    return HEALTH_CATEGORY.POOR;\r\n  } else if (success_rate <= 90) {\r\n    return HEALTH_CATEGORY.FAIR;\r\n  } else {\r\n    return HEALTH_CATEGORY.GOOD;\r\n  }\r\n}\r\n\r\nexport default function HealthMonitor(props) {\r\n  function average(array) {\r\n    return array.reduce((acc, cur) => acc + cur, 0) / array.length;\r\n  }\r\n\r\n  const useNicknameOverIP = true;\r\n  let pingbursts = props.pingbursts;\r\n  //has the ip's ->  average success rate, health category, number of samples used for the average\r\n  let results_map = new Map();\r\n  pingbursts = pingbursts.filter((pingburst) => pingburst.records.length > 0);\r\n  pingbursts.forEach((pingburst) => {\r\n    let pingburst_average_success =\r\n      average(\r\n        pingburst[\"records\"].map((records) => (records[\"was_success\"] ? 1 : 0))\r\n      ) * 100; //get the average of the current ping id\r\n    const ip = pingburst[\"records\"][0][\"dest_ip\"];\r\n    const ip_info = get_ip_address_info_by_ip(props.ip_address_info_array, ip);\r\n    if (!ip_info.is_selected) {\r\n      return;\r\n    }\r\n    const nickname = ip_info.nickname;\r\n    const label = useNicknameOverIP ? nickname : ip;\r\n    let ip_health_info = null;\r\n    if (results_map.has(label)) {\r\n      const health_info = results_map.get(label);\r\n      const pingburst_num_samples = pingburst.records.length;\r\n      const num_samples = health_info.num_samples + pingburst_num_samples;\r\n      //the new average, has to take into account previous amount of samples the average\r\n      const average_success =\r\n        (health_info.average_success * health_info.num_samples +\r\n          pingburst_average_success * pingburst_num_samples) /\r\n        num_samples;\r\n      ip_health_info = {\r\n        average_success,\r\n        num_samples,\r\n        health_category: success_rate_to_category(average_success),\r\n      };\r\n    } else {\r\n      ip_health_info = {\r\n        average_success: pingburst_average_success,\r\n        num_samples: pingburst.records.length,\r\n        health_category: success_rate_to_category(pingburst_average_success),\r\n      };\r\n    }\r\n\r\n    results_map.set(label, ip_health_info);\r\n  });\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const category_color_name_map = {\r\n    [HEALTH_CATEGORY.URGENT]: \"red\",\r\n    [HEALTH_CATEGORY.POOR]: \"orange\",\r\n    [HEALTH_CATEGORY.FAIR]: \"yellow\",\r\n    [HEALTH_CATEGORY.GOOD]: \"green\",\r\n  };\r\n  const category_color_map = {};\r\n  Object.keys(category_color_name_map).forEach((category) => {\r\n    const color_name = category_color_name_map[category];\r\n    category_color_map[category] = {\r\n      background: ColorScheme.get_color_with_opacity(color_name, 0.6, theme),\r\n      border: ColorScheme.get_color(color_name, theme),\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Tile omit_header={true}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          marginTop: 20,\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          width: \"80%\",\r\n          marginBottom: 40,\r\n          gap: 50,\r\n        }}\r\n      >\r\n        <ErrorRateLineChart {...props} />\r\n        <BarChart\r\n          results_map={results_map}\r\n          category_color_map={category_color_map}\r\n        />\r\n        <PieChart\r\n          results_map={results_map}\r\n          category_color_map={category_color_map}\r\n        />\r\n      </div>\r\n    </Tile>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../assets/Monitor.css\";\r\nimport log_icon from \"../icons/log_icon.svg\";\r\nimport health_icon from \"../icons/health_icon.svg\";\r\nimport delay_icon from \"../icons/delay_icon.svg\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\nimport PingLog from \"./PingLog\";\r\nimport DelayMonitor from \"./DelayMonitor\";\r\nimport HealthMonitor from \"./HealthMonitor\";\r\n\r\nconst MONITOR_STATE = {\r\n  LOG: 0,\r\n  HEALTH: 1,\r\n  DELAY: 2,\r\n};\r\nObject.freeze(MONITOR_STATE);\r\n\r\nexport default class Monitor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      monitor_state: MONITOR_STATE.LOG,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let current_display = null;\r\n    switch (this.state.monitor_state) {\r\n      case MONITOR_STATE.DELAY:\r\n        current_display = <DelayMonitor {...this.props} />;\r\n        break;\r\n      case MONITOR_STATE.LOG:\r\n        current_display = <PingLog {...this.props} />;\r\n        break;\r\n      case MONITOR_STATE.HEALTH:\r\n        current_display = <HealthMonitor {...this.props} />;\r\n        break;\r\n      default:\r\n        console.error(\r\n          \"Encountered invalid MONITOR_STATE\",\r\n          this.state.monitor_state\r\n        );\r\n    }\r\n\r\n    let monitor_tab_button_style = null;\r\n    const theme = this.context;\r\n    if (theme === THEME.TI) {\r\n      monitor_tab_button_style = {\r\n        backgroundColor: ColorScheme.get_color(\"gray\", theme),\r\n      };\r\n    } else {\r\n      const bg0 = ColorScheme.get_color(\"bg0\", theme);\r\n      monitor_tab_button_style = {\r\n        backgroundColor: bg0,\r\n      };\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"monitor_tab_button_array\">\r\n          <button\r\n            style={monitor_tab_button_style}\r\n            className=\"monitor_tab_button\"\r\n            onClick={() => {\r\n              this.setState({ monitor_state: MONITOR_STATE.LOG });\r\n            }}\r\n          >\r\n            <img src={log_icon} alt=\"log\" />\r\n          </button>\r\n          <button\r\n            style={monitor_tab_button_style}\r\n            className=\"monitor_tab_button\"\r\n            onClick={() => {\r\n              this.setState({ monitor_state: MONITOR_STATE.HEALTH });\r\n            }}\r\n          >\r\n            <img src={health_icon} alt=\"health\" />\r\n          </button>\r\n          <button\r\n            style={monitor_tab_button_style}\r\n            className=\"monitor_tab_button\"\r\n            onClick={() => {\r\n              this.setState({ monitor_state: MONITOR_STATE.DELAY });\r\n            }}\r\n          >\r\n            <img src={delay_icon} alt=\"delay\" />\r\n          </button>\r\n        </div>\r\n        {current_display}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nMonitor.contextType = ThemeContext;\r\n","import React, { useContext } from \"react\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\n\r\nexport default function StatusIndicator(props) {\r\n  const theme = useContext(ThemeContext);\r\n  const green = ColorScheme.get_color(\"green\", theme);\r\n  const red = ColorScheme.get_color(\"red\", theme);\r\n\r\n  const status_color = props.is_good_status ? green : red;\r\n  let style = {\r\n    backgroundColor: status_color,\r\n  };\r\n  if (theme === THEME.TI) {\r\n    style = {\r\n      width: 28,\r\n      height: 28,\r\n      boxShadow: \"0px 0px 4px rgba(0, 0, 0, 0.25)\",\r\n      ...style,\r\n    };\r\n  } else {\r\n    const border_color = ColorScheme.get_color(\"bg1\", theme);\r\n    style = {\r\n      width: 22,\r\n      height: 22,\r\n      border: `3px solid ${border_color}`,\r\n      borderRadius: 16,\r\n      ...style,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div style={style}></div>\r\n    //   <svg\r\n    //     width=\"28\"\r\n    //     height=\"28\"\r\n    //     viewBox=\"0 0 28 28\"\r\n    //     fill=\"none\"\r\n    //     xmlns=\"http://www.w3.org/2000/svg\"\r\n    //   >\r\n    //     <circle\r\n    //       cx=\"14\"\r\n    //       cy=\"14\"\r\n    //       r=\"12.5\"\r\n    //       fill={status_color}\r\n    //       stroke={border_color}\r\n    //       strokeWidth=\"3\"\r\n    //     />\r\n    //   </svg>\r\n  );\r\n}\r\n","import CheckBox from \"./CheckBox\";\r\nimport StatusIndicator from \"./StatusIndicator\";\r\nimport FlexTable from \"./FlexTable\";\r\nimport \"../assets/IPAddressTable.css\";\r\nimport Tooltip from \"./Tooltip\";\r\n\r\n// const example_ip_address_info_array = [\r\n//   {\r\n//     ip_address: \"aaaa\",\r\n//     nickname: \"alpha\",\r\n//     is_connected: false,\r\n//     is_selected: false,\r\n//   },\r\n//   {\r\n//     ip_address: \"bbbb\",\r\n//     nickname: \"beta\",\r\n//     is_connected: true,\r\n//     is_selected: true,\r\n//   },\r\n//   {\r\n//     ip_address: \"cccc\",\r\n//     nickname: \"gamma\",\r\n//     is_connected: false,\r\n//     is_selected: true,\r\n//   },\r\n// ];\r\n\r\n// function getIPAddressInfoByIPs(ip_addresses) {\r\n//   return ip_addresses.map((ip_address) =>\r\n//     example_ip_address_info_array.find((ele) => ele.ip_address === ip_address)\r\n//   );\r\n// }\r\n\r\nfunction ipDataToElementsMapper(index, ip_table_rows, { columnWidths }) {\r\n  const ip_row = ip_table_rows[index];\r\n  const ip_address_max_width = columnWidths[1];\r\n  const ip_address_style = {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  };\r\n  if (ip_address_max_width !== -1) {\r\n    ip_address_style.width = ip_address_max_width - 30;\r\n  }\r\n  return [\r\n    <CheckBox\r\n      click_handler={(newVal) =>\r\n        ip_row.ip_selection_handler(ip_row.ip_address, newVal)\r\n      }\r\n      is_checked={ip_row.is_selected}\r\n    />,\r\n    <Tooltip\r\n      content={ip_row.ip_address}\r\n      style={{\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        height: 30,\r\n        // left: 0,\r\n        // right: 0,\r\n      }}\r\n    >\r\n      <div className=\"ip-address-table-ip-address\" style={ip_address_style}>\r\n        {ip_row.ip_address}\r\n      </div>\r\n    </Tooltip>,\r\n    ip_row.nickname,\r\n    <StatusIndicator is_good_status={ip_row.is_connected} />,\r\n  ];\r\n}\r\n\r\nexport default function IPAddressTable(props) {\r\n  let all_ips_selected = true;\r\n  for (const ip_info of props.ip_address_info_array) {\r\n    if (!ip_info.is_selected) {\r\n      all_ips_selected = false;\r\n      break;\r\n    }\r\n  }\r\n\r\n  const toggle_selection_all_ips = (val) => {\r\n    for (const ip_info of props.ip_address_info_array) {\r\n      props.ip_selection_handler(ip_info.ip_address, val);\r\n    }\r\n  };\r\n\r\n  const table_format = [\r\n    {\r\n      headerValue: (\r\n        <CheckBox\r\n          is_checked={all_ips_selected}\r\n          click_handler={toggle_selection_all_ips}\r\n        />\r\n      ),\r\n      style: {\r\n        flexBasis: \"40px\",\r\n        flexGrow: \"0\",\r\n      },\r\n    },\r\n    {\r\n      headerValue: \"IP\",\r\n      style: {\r\n        flexGrow: \"1\",\r\n      },\r\n    },\r\n    {\r\n      headerValue: \"Nickname\",\r\n      style: {\r\n        flexGrow: \"1\",\r\n      },\r\n    },\r\n    {\r\n      headerValue: \"Status\",\r\n      style: {\r\n        flexBasis: \"100px\",\r\n        flexGrow: \"0\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  const table_rows = props.ip_address_info_array.map((ip_address_info) => {\r\n    return {\r\n      id: ip_address_info.ip_address,\r\n      ip_selection_handler: props.ip_selection_handler,\r\n      ...ip_address_info,\r\n    };\r\n  });\r\n\r\n  const tableProps = {\r\n    itemCount: table_rows.length,\r\n    rowKeyGenerator: (index, rows) => rows[index].id,\r\n    itemData: table_rows,\r\n    dataToElementsMapper: ipDataToElementsMapper,\r\n    table_format,\r\n    rowHeight: 50,\r\n    numVisibleRows: 8,\r\n  };\r\n\r\n  return <FlexTable {...tableProps} />;\r\n}\r\n","import React from \"react\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\nimport cytoscape from \"cytoscape\";\r\nimport CytoscapeComponent from \"react-cytoscapejs\";\r\nimport dagre from \"cytoscape-dagre\";\r\nimport produce from \"immer\";\r\n// import \"../assets/Pane.css\";\r\ncytoscape.use(dagre);\r\n\r\nexport default class Topology extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.layout = { name: \"dagre\" };\r\n\r\n    const ti_gray = ColorScheme.get_color(\"gray\", THEME.TI);\r\n    const ti_blue = ColorScheme.get_color(\"blue\", THEME.TI);\r\n    const ti_red = ColorScheme.get_color(\"red\", THEME.TI);\r\n    this.previous_theme = this.context;\r\n    this.ti_stylesheet = [\r\n      {\r\n        selector: \"node\",\r\n        style: {\r\n          \"background-color\": ti_red,\r\n        },\r\n      },\r\n      {\r\n        selector: \"edge\",\r\n        style: {\r\n          width: 3,\r\n          \"line-color\": ti_gray,\r\n          \"target-arrow-color\": ti_gray,\r\n          \"target-arrow-shape\": \"triangle\",\r\n          \"curve-style\": \"bezier\",\r\n        },\r\n      },\r\n      {\r\n        selector: \"node:selected\",\r\n        style: {\r\n          \"background-color\": ti_blue,\r\n        },\r\n      },\r\n    ];\r\n    const fg0 = ColorScheme.get_color(\"fg0\");\r\n    const gruvbox_blue = ColorScheme.get_color(\"blue\", THEME.GRUVBOX);\r\n    const gruvbox_orange = ColorScheme.get_color(\"orange\", THEME.GRUVBOX); //currently no ti orange color so use gruvbox for both\r\n    this.gruvbox_stylesheet = [\r\n      {\r\n        selector: \"node\",\r\n        style: {\r\n          \"background-color\": gruvbox_orange,\r\n        },\r\n      },\r\n      {\r\n        selector: \"edge\",\r\n        style: {\r\n          width: 3,\r\n          \"line-color\": fg0,\r\n          \"target-arrow-color\": fg0,\r\n          \"target-arrow-shape\": \"triangle\",\r\n          \"curve-style\": \"bezier\",\r\n        },\r\n      },\r\n      {\r\n        selector: \"node:selected\",\r\n        style: {\r\n          \"background-color\": gruvbox_blue,\r\n        },\r\n      },\r\n    ];\r\n  }\r\n  componentDidMount() {\r\n    this.cy.on(\"select\", \"node\", (e) => {\r\n      const node = e.target;\r\n      this.props.ip_selection_handler(node.id(), true);\r\n    });\r\n    this.cy.on(\"unselect\", \"node\", (e) => {\r\n      const node = e.target;\r\n      this.props.ip_selection_handler(node.id(), false);\r\n    });\r\n    this.cy.on(\"add\", \"node\", (_evt) => {\r\n      this.cy.layout(this.layout).run();\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.context !== this.previous_theme) {\r\n      this.cy.style(\r\n        this.context === THEME.TI ? this.ti_stylesheet : this.gruvbox_stylesheet\r\n      );\r\n      this.previous_theme = this.context;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const ip_info_array = this.props.ip_address_info_array;\r\n    const unnormalized_nodes = this.props.elements.nodes.map((node) => {\r\n      const ip_info = ip_info_array.find(\r\n        (ip_info) => ip_info.ip_address === node.data.id\r\n      );\r\n      return { data: { selected: ip_info.is_selected, id: node.data.id } };\r\n    });\r\n    const unnormalized_elements = {\r\n      nodes: unnormalized_nodes,\r\n      edges: this.props.elements.edges,\r\n    };\r\n\r\n    return (\r\n      <CytoscapeComponent\r\n        elements={CytoscapeComponent.normalizeElements(unnormalized_elements)}\r\n        cy={(cy) => {\r\n          this.cy = cy;\r\n        }}\r\n        style={{ width: \"100%\" }}\r\n        layout={this.layout}\r\n        stylesheet={\r\n          this.context === THEME.TI\r\n            ? this.ti_stylesheet\r\n            : this.gruvbox_stylesheet\r\n        }\r\n        wheelSensitivity={0.1}\r\n      />\r\n    );\r\n    // return <div style={{ width: \"100%\" }} id=\"cy\"></div>;\r\n  }\r\n}\r\nTopology.contextType = ThemeContext;\r\n","export default __webpack_public_path__ + \"static/media/day_icon.4b712eab.svg\";","export default __webpack_public_path__ + \"static/media/night_icon.ffe0e7dd.svg\";","import { useContext } from \"react\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\nimport day_icon from \"../icons/day_icon.svg\";\r\nimport night_icon from \"../icons/night_icon.svg\";\r\n\r\nfunction NightIcon() {\r\n  return (\r\n    <svg\r\n      width=\"32\"\r\n      height=\"32\"\r\n      viewBox=\"0 0 32 32\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        fill-rule=\"evenodd\"\r\n        clip-rule=\"evenodd\"\r\n        d=\"M17.3333 7C18.0182 7 18.3607 7 18.5969 7.14044C18.983 7.36999 19.1687 7.82915 19.0508 8.26258C18.9786 8.52775 18.6009 8.89311 17.8454 9.62384C16.0908 11.3208 15 13.6997 15 16.3333C15 18.967 16.0908 21.3459 17.8454 23.0428C18.6009 23.7736 18.9786 24.1389 19.0508 24.4041C19.1687 24.8375 18.983 25.2967 18.5969 25.5262C18.3607 25.6667 18.0182 25.6667 17.3333 25.6667V25.6667C12.1787 25.6667 8 21.488 8 16.3333C8 11.1787 12.1787 7 17.3333 7V7Z\"\r\n        fill=\"white\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nfunction DayIcon(props) {\r\n  return (\r\n    <svg\r\n      width=\"32\"\r\n      height=\"32\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <circle cx=\"12\" cy=\"12\" r=\"5\" fill=\"white\" />\r\n      <path d=\"M12 8V4\" stroke=\"white\" strokeWidth=\"2\" />\r\n      <path d=\"M12 20V16\" stroke=\"white\" strokeWidth=\"2\" />\r\n      <path\r\n        d=\"M9.17169 9.1712L6.34326 6.34277\"\r\n        stroke=\"white\"\r\n        strokeWidth=\"2\"\r\n      />\r\n      <path\r\n        d=\"M17.6568 17.6566L14.8284 14.8281\"\r\n        stroke=\"white\"\r\n        strokeWidth=\"2\"\r\n      />\r\n      <path d=\"M16 12L20 12\" stroke=\"white\" strokeWidth=\"2\" />\r\n      <path d=\"M4 12L8 12\" stroke=\"white\" strokeWidth=\"2\" />\r\n      <path\r\n        d=\"M14.8283 9.1712L17.6567 6.34277\"\r\n        stroke=\"white\"\r\n        strokeWidth=\"2\"\r\n      />\r\n      <path\r\n        d=\"M6.3432 17.6566L9.17163 14.8281\"\r\n        stroke=\"white\"\r\n        strokeWidth=\"2\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default function ThemeToggle(props) {\r\n  const theme = useContext(ThemeContext);\r\n  // let borderRadius = props.theme === THEME.TI ? 0 : 9;\r\n\r\n  const is_ti_themed = theme === THEME.TI;\r\n  let borderRadius = 9;\r\n  const boxShadow = is_ti_themed\r\n    ? \"0px 0px 11px rgba(0, 0, 0, 0.4)\"\r\n    : undefined;\r\n\r\n  let displayElement = null;\r\n  let slider_background = null;\r\n  if (is_ti_themed) {\r\n    slider_background = ColorScheme.get_color(\"red_dark\", theme);\r\n    displayElement = (\r\n      <>\r\n        <DayIcon />\r\n        <div\r\n          style={{\r\n            backgroundColor: ColorScheme.get_color(\"bg3\", THEME.TI),\r\n            width: 32,\r\n            height: 32,\r\n            borderRadius,\r\n          }}\r\n        ></div>\r\n      </>\r\n    );\r\n  } else {\r\n    slider_background = ColorScheme.get_color(\"bg1\", theme);\r\n\r\n    displayElement = (\r\n      <>\r\n        <div\r\n          style={{\r\n            backgroundColor: ColorScheme.get_color(\"bg2\", theme),\r\n            width: 32,\r\n            height: 32,\r\n            borderRadius,\r\n          }}\r\n        ></div>\r\n        <NightIcon />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 64,\r\n        height: 32,\r\n        backgroundColor: slider_background,\r\n        borderRadius,\r\n        display: \"flex\",\r\n        cursor: \"pointer\",\r\n        flexDirection: \"row\",\r\n        boxShadow,\r\n      }}\r\n      onClick={() => {\r\n        const new_is_ti_themed = !is_ti_themed;\r\n        props.handle_new_theme(new_is_ti_themed ? THEME.TI : THEME.GRUVBOX);\r\n      }}\r\n    >\r\n      {displayElement}\r\n    </div>\r\n  );\r\n}\r\n","import { motion } from \"framer-motion\";\r\nimport { useContext, useState } from \"react\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\nimport \"../assets/SettingsButton.css\";\r\n\r\nexport default function SettingsButton(props) {\r\n  const theme = useContext(ThemeContext);\r\n  const [is_hovering, set_hover_state] = useState(false);\r\n  let surface_style = {\r\n    width: \"19.607vw\",\r\n    position: \"absolute\",\r\n    top: \"calc(100% + 10px)\",\r\n    right: \"0px\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  };\r\n\r\n  let input_style = {\r\n    width: \"100%\",\r\n    border: 0,\r\n    height: 26,\r\n    fontFamily: \"inherit\",\r\n    fontWeight: \"inherit\",\r\n    paddingLeft: 10,\r\n  };\r\n  if (theme === THEME.TI) {\r\n    surface_style = {\r\n      backgroundColor: ColorScheme.get_color(\"bg2\", theme),\r\n      // borderTop: `3px solid ${ColorScheme.get_color(\"red\", theme)}`,\r\n      boxShadow: \"0px 1px 14px rgba(0, 0, 0, 0.3)\",\r\n      color: ColorScheme.get_color(\"gray\", theme),\r\n      borderRadius: 0,\r\n      ...surface_style,\r\n    };\r\n    input_style = {\r\n      backgroundColor: ColorScheme.get_color(\"bg0\", theme),\r\n      boxShadow: \"0px 0px 4px rgba(0, 0, 0, 0.3)\",\r\n      ...input_style,\r\n    };\r\n  } else {\r\n    surface_style = {\r\n      backgroundColor: ColorScheme.get_color(\"bg2\", theme),\r\n      borderRadius: 10,\r\n      ...surface_style,\r\n    };\r\n    input_style = {\r\n      backgroundColor: ColorScheme.get_color(\"bg1\", theme),\r\n      color: \"white\",\r\n      borderRadius: 5,\r\n      ...input_style,\r\n    };\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        fontWeight: 500,\r\n      }}\r\n    >\r\n      <motion.svg\r\n        whileTap={{ rotate: 90 }}\r\n        onClick={() => set_hover_state(!is_hovering)}\r\n        style={{\r\n          marginLeft: 10,\r\n          cursor: \"pointer\",\r\n        }}\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          clipRule=\"evenodd\"\r\n          d=\"M13.9838 2.54161C14.0711 2.71093 14.0928 2.92777 14.1361 3.36144C14.2182 4.1823 14.2593 4.59274 14.4311 4.81793C14.649 5.10358 15.0034 5.25038 15.3595 5.20248C15.6402 5.16472 15.9594 4.90352 16.5979 4.38113C16.9352 4.10515 17.1038 3.96716 17.2853 3.90918C17.5158 3.83555 17.7652 3.84798 17.9872 3.94419C18.162 4.01994 18.3161 4.17402 18.6243 4.4822L19.5178 5.37567C19.8259 5.68385 19.98 5.83794 20.0558 6.01275C20.152 6.23478 20.1644 6.48415 20.0908 6.71464C20.0328 6.89612 19.8948 7.06478 19.6188 7.4021C19.0964 8.0406 18.8352 8.35984 18.7975 8.64056C18.7496 8.99662 18.8964 9.35102 19.182 9.56893C19.4072 9.74072 19.8176 9.78176 20.6385 9.86385C21.0722 9.90722 21.2891 9.92891 21.4584 10.0162C21.6734 10.1272 21.841 10.3123 21.9299 10.5373C22 10.7145 22 10.9324 22 11.3682V12.6319C22 13.0676 22 13.2855 21.93 13.4626C21.841 13.6877 21.6734 13.8729 21.4583 13.9838C21.289 14.0711 21.0722 14.0928 20.6386 14.1361L20.6386 14.1361C19.818 14.2182 19.4077 14.2592 19.1825 14.4309C18.8967 14.6489 18.7499 15.0034 18.7979 15.3596C18.8357 15.6402 19.0968 15.9593 19.619 16.5976C19.8949 16.9348 20.0328 17.1034 20.0908 17.2848C20.1645 17.5154 20.152 17.7648 20.0558 17.9869C19.98 18.1617 19.826 18.3157 19.5179 18.6238L18.6243 19.5174C18.3162 19.8255 18.1621 19.9796 17.9873 20.0554C17.7652 20.1516 17.5159 20.164 17.2854 20.0904C17.1039 20.0324 16.9352 19.8944 16.5979 19.6184L16.5979 19.6184C15.9594 19.096 15.6402 18.8348 15.3595 18.7971C15.0034 18.7492 14.649 18.896 14.4311 19.1816C14.2593 19.4068 14.2183 19.8173 14.1362 20.6383C14.0928 21.0722 14.0711 21.2891 13.9837 21.4585C13.8728 21.6735 13.6877 21.8409 13.4628 21.9299C13.2856 22 13.0676 22 12.6316 22H11.3682C10.9324 22 10.7145 22 10.5373 21.9299C10.3123 21.841 10.1272 21.6734 10.0162 21.4584C9.92891 21.2891 9.90722 21.0722 9.86385 20.6385C9.78176 19.8176 9.74072 19.4072 9.56892 19.182C9.35101 18.8964 8.99663 18.7496 8.64057 18.7975C8.35985 18.8352 8.04059 19.0964 7.40208 19.6189L7.40206 19.6189C7.06473 19.8949 6.89607 20.0329 6.71458 20.0908C6.4841 20.1645 6.23474 20.152 6.01272 20.0558C5.8379 19.9801 5.6838 19.826 5.37561 19.5178L4.48217 18.6243C4.17398 18.3162 4.01988 18.1621 3.94414 17.9873C3.84794 17.7652 3.8355 17.5159 3.90913 17.2854C3.96711 17.1039 4.10511 16.9352 4.3811 16.5979C4.90351 15.9594 5.16471 15.6402 5.20247 15.3594C5.25037 15.0034 5.10357 14.649 4.81792 14.4311C4.59273 14.2593 4.1823 14.2182 3.36143 14.1361C2.92776 14.0928 2.71093 14.0711 2.54161 13.9838C2.32656 13.8728 2.15902 13.6877 2.07005 13.4627C2 13.2855 2 13.0676 2 12.6318V11.3683C2 10.9324 2 10.7144 2.07008 10.5372C2.15905 10.3123 2.32654 10.1272 2.54152 10.0163C2.71088 9.92891 2.92777 9.90722 3.36155 9.86384H3.36155H3.36156C4.18264 9.78173 4.59319 9.74068 4.81842 9.56881C5.10395 9.35092 5.2507 8.99664 5.20287 8.64066C5.16514 8.35987 4.90385 8.04052 4.38128 7.40182C4.10516 7.06435 3.96711 6.89561 3.90914 6.71405C3.83557 6.48364 3.848 6.23438 3.94413 6.01243C4.01988 5.83754 4.17403 5.68339 4.48233 5.37509L5.37565 4.48177L5.37566 4.48177C5.68385 4.17357 5.83795 4.01947 6.01277 3.94373C6.23478 3.84753 6.48414 3.8351 6.71463 3.90872C6.89612 3.9667 7.06481 4.10472 7.4022 4.38076C8.04061 4.9031 8.35982 5.16427 8.64044 5.20207C8.99661 5.25003 9.35113 5.10319 9.56907 4.81742C9.74077 4.59227 9.78181 4.18195 9.86387 3.36131C9.90722 2.92776 9.9289 2.71098 10.0162 2.5417C10.1271 2.32658 10.3123 2.15898 10.5374 2.07001C10.7145 2 10.9324 2 11.3681 2H12.6318C13.0676 2 13.2855 2 13.4627 2.07005C13.6877 2.15902 13.8728 2.32656 13.9838 2.54161ZM12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16Z\"\r\n          fill=\"white\"\r\n        />\r\n      </motion.svg>\r\n\r\n      <motion.div\r\n        style={surface_style}\r\n        initial={false}\r\n        animate={{\r\n          opacity: is_hovering ? 1 : 0,\r\n          x: 0,\r\n        }}\r\n        transition={{\r\n          duration: 0.3,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-evenly\",\r\n            width: \"87.5%\",\r\n            height: 80,\r\n          }}\r\n        >\r\n          <p\r\n            style={{\r\n              alignSelf: \"flex-start\",\r\n              margin: 0,\r\n              userSelect: \"none\",\r\n            }}\r\n          >\r\n            Backend URL\r\n          </p>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => {\r\n              props.change_handler(e.target.value);\r\n            }}\r\n            className=\"settings_input\"\r\n            value={props.ping_api_location}\r\n            style={input_style}\r\n          ></input>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n","import { motion } from \"framer-motion\";\r\nimport { useContext, useState } from \"react\";\r\nimport reactDom from \"react-dom\";\r\nimport { get_ip_address_info_by_ip } from \"../App\";\r\nimport \"../assets/PingJobMonitor.css\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\nimport FlexTable from \"./FlexTable\";\r\n\r\nasync function abortPingJob(id) {\r\n  const endpoint = `pingbursts/${id}/abort`;\r\n  const url = new URL(endpoint, document.ping_api_location);\r\n  const res = await fetch(url);\r\n  const res_json = await res.json();\r\n  console.log(res_json);\r\n}\r\n\r\nfunction pingJobToElementsMapper(index, pingJobs, { columnWidths }) {\r\n  const job = pingJobs[index];\r\n\r\n  const elements = [\r\n    job.nickname,\r\n    job.id,\r\n    job.num_packets_remaining,\r\n    <CloseButton is_light={false} closeHandler={() => abortPingJob(job.id)} />,\r\n  ];\r\n  return elements;\r\n}\r\n\r\nfunction CloseIcon(props) {\r\n  const theme = useContext(ThemeContext);\r\n  let color = null;\r\n  const is_light = props.is_light;\r\n  if (theme === THEME.TI) {\r\n    color = is_light\r\n      ? ColorScheme.get_color(\"white\", theme)\r\n      : ColorScheme.get_color(\"gray\", theme);\r\n  } else {\r\n    color = is_light\r\n      ? ColorScheme.get_color(\"white\", theme)\r\n      : ColorScheme.get_color(\"white\", theme);\r\n  }\r\n\r\n  return (\r\n    <svg\r\n      {...props}\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M18 6L6 18\"\r\n        stroke={color}\r\n        strokeWidth=\"2\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n      <path\r\n        d=\"M6 6L18 18\"\r\n        stroke={color}\r\n        strokeWidth=\"2\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nfunction CloseButton(props) {\r\n  const [isHovering, setHovering] = useState(false);\r\n  return (\r\n    <motion.div\r\n      whileTap={{ scale: 1.2 }}\r\n      onClick={() => {\r\n        props.closeHandler();\r\n      }}\r\n      onMouseEnter={() => setHovering(true)}\r\n      onMouseLeave={() => setHovering(false)}\r\n    >\r\n      <CloseIcon is_light={props.is_light} is_active={isHovering} />\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport function PingJobMonitor(props) {\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const table_rows = props.pingbursts\r\n    .filter((pingburst) => {\r\n      const has_completed =\r\n        Number(pingburst.num_packets_requested) === pingburst.records.length;\r\n      const has_aborted = pingburst.was_aborted;\r\n      return !has_aborted && !has_completed;\r\n    })\r\n    .map((pingburst) => {\r\n      let nickname = null;\r\n      if (pingburst.records.length > 0) {\r\n        try {\r\n          const ip_address_info = get_ip_address_info_by_ip(\r\n            props.ip_address_info_array,\r\n            pingburst.records[0].dest_ip\r\n          );\r\n          nickname = ip_address_info.nickname;\r\n        } catch (e) {\r\n          nickname = \"N/A\";\r\n        }\r\n      } else {\r\n        nickname = \"N/A\";\r\n      }\r\n      const num_packets_remaining =\r\n        pingburst.num_packets_requested === \"∞\"\r\n          ? \"∞\"\r\n          : String(pingburst.num_packets_requested - pingburst.records.length);\r\n      return { nickname, id: pingburst.id, num_packets_remaining, theme };\r\n    });\r\n\r\n  function abortAllPingJobs(ping_jobs) {\r\n    for (const job of ping_jobs) {\r\n      abortPingJob(job.id);\r\n    }\r\n  }\r\n\r\n  const table_format = [\r\n    {\r\n      headerValue: \"Nickname\",\r\n      style: {\r\n        flexGrow: \"1\",\r\n      },\r\n    },\r\n    {\r\n      headerValue: \"Burst ID\",\r\n      style: {\r\n        flexGrow: \"1\",\r\n      },\r\n    },\r\n    {\r\n      headerValue: \"Remaining\",\r\n      style: {\r\n        flexGrow: \"1\",\r\n      },\r\n    },\r\n    {\r\n      headerValue: (\r\n        <CloseButton\r\n          is_light={true}\r\n          closeHandler={() => abortAllPingJobs(table_rows)}\r\n        />\r\n      ),\r\n      style: {\r\n        flexBasis: \"100px\",\r\n        flexGrow: \"0\",\r\n      },\r\n    },\r\n  ];\r\n  const tableProps = {\r\n    itemCount: table_rows.length,\r\n    rowKeyGenerator: (index, rows) => rows[index].id,\r\n    itemData: table_rows,\r\n    dataToElementsMapper: pingJobToElementsMapper,\r\n    table_format,\r\n    rowHeight: 50,\r\n    numVisibleRows: 10,\r\n  };\r\n\r\n  return reactDom.createPortal(\r\n    <motion.div\r\n      className=\"ping_job_monitor_container\"\r\n      // initial={{ opacity: 0 }}\r\n      // animate={{ opacity: 1 }}\r\n      // exit={{ opacity: 0 }}\r\n      // transition={{ duration: 0.1 }}\r\n    >\r\n      <FlexTable {...tableProps} />;\r\n    </motion.div>,\r\n    document.body\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport \"../assets/PingJobsButton.css\";\r\nimport { PingJobMonitor } from \"./PingJobMonitor\";\r\nimport { useContext } from \"react\";\r\nimport { ColorScheme, THEME, ThemeContext } from \"../ColorScheme\";\r\n\r\nexport function PingJobsButton(props) {\r\n  const [shown, setShown] = useState(false);\r\n  const theme = useContext(ThemeContext);\r\n  const active_class = shown ? \"active\" : \"\";\r\n  const bg_color =\r\n    theme === THEME.TI\r\n      ? ColorScheme.get_color(\"red_dark\", theme)\r\n      : ColorScheme.get_color(\"bg1\", theme);\r\n  return (\r\n    <div\r\n      className={[\"ping_jobs_icon_container\", theme, active_class].join(\" \")}\r\n    >\r\n      <svg\r\n        style={{\r\n          overflow: \"visible\",\r\n        }}\r\n        onClick={() => setShown(!shown)}\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        {shown && (\r\n          <g style={{ transformOrigin: \"center\" }} transform=\"scale(1.5)\">\r\n            <rect\r\n              x=\"0\"\r\n              y=\"0\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              rx={2}\r\n              fill={bg_color}\r\n            ></rect>\r\n          </g>\r\n        )}\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          clipRule=\"evenodd\"\r\n          d=\"M2 21V7C2 5.11438 2 4.17157 2.58579 3.58579C3.17157 3 4.11438 3 6 3H16C16.8317 3 17.4778 3 18.0037 3.02706C15.7519 3.2741 14 5.18245 14 7.5V11.0002L13.9012 20.9671L11 20L8 21L5 20L2 21ZM21 11L16 11V7.5C16 6.11929 17.1193 5 18.5 5C19.8807 5 21 6.11929 21 7.5V11ZM4 7C4 6.44772 4.44772 6 5 6H11C11.5523 6 12 6.44772 12 7C12 7.55228 11.5523 8 11 8H5C4.44772 8 4 7.55228 4 7ZM4 11C4 10.4477 4.44772 10 5 10H7C7.55228 10 8 10.4477 8 11C8 11.5523 7.55228 12 7 12H5C4.44772 12 4 11.5523 4 11ZM4 15C4 14.4477 4.44772 14 5 14H9C9.55228 14 10 14.4477 10 15C10 15.5523 9.55228 16 9 16H5C4.44772 16 4 15.5523 4 15Z\"\r\n          fill=\"white\"\r\n        />\r\n      </svg>\r\n      <AnimatePresence>\r\n        {shown && <PingJobMonitor {...props} />}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport app_fonts from \"./AppFonts.js\";\r\nimport { THEME, ColorScheme, ThemeContext } from \"./ColorScheme\";\r\nimport Pane from \"./components/Pane\";\r\nimport Tile, { TileHeader } from \"./components/Tile\";\r\nimport PingConfig from \"./components/PingConfig\";\r\nimport AtAGlance from \"./components/AtAGlance\";\r\nimport Monitor from \"./components/Monitor\";\r\nimport IPAddressTable from \"./components/IPAddressTable\";\r\nimport Topology from \"./components/Topology\";\r\nimport produce from \"immer\";\r\nimport ThemeToggle from \"./components/ThemeToggle\";\r\nimport SettingsButton from \"./components/SettingsButton\";\r\nimport { compareObjects, mergeObjectsInPlace } from \"./utils\";\r\nimport { PingJobsButton } from \"./components/PingJobsButton\";\r\n\r\nfunction nickname_generator(seed) {\r\n  const nicknames = [\r\n    \"Alfa\",\r\n    \"Bravo\",\r\n    \"Charlie\",\r\n    \"Delta\",\r\n    \"Echo\",\r\n    \"Foxtrot\",\r\n    \"Golf\",\r\n    \"Hotel\",\r\n    \"India\",\r\n    \"Juliett\",\r\n    \"Kilo\",\r\n    \"Lima\",\r\n    \"Mike\",\r\n    \"November\",\r\n    \"Oscar\",\r\n    \"Papa\",\r\n    \"Quebec\",\r\n    \"Romeo\",\r\n    \"Sierra\",\r\n    \"Tango\",\r\n    \"Uniform\",\r\n    \"Victor\",\r\n    \"Whiskey\",\r\n    \"X-ray\",\r\n    \"Yankee\",\r\n    \"Zulu\",\r\n  ];\r\n  // const index = Math.floor(Math.random() * nicknames.length);\r\n  const index = seed % nicknames.length;\r\n  return nicknames[index];\r\n}\r\n\r\nexport function get_ip_address_info_by_ip(ip_address_info_array, ip) {\r\n  for (const ip_address_info of ip_address_info_array) {\r\n    if (ip_address_info.ip_address === ip) {\r\n      return ip_address_info;\r\n    }\r\n  }\r\n}\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      topology: { nodes: [], edges: [] },\r\n      ip_address_info_array: [],\r\n      pingbursts: [],\r\n      ping_api_location: \"http://localhost:8000\",\r\n      theme: THEME.TI,\r\n    };\r\n\r\n    this.unique_ips_seen = 0;\r\n\r\n    let body = document.getElementsByTagName(\"body\")[0];\r\n    body.style.backgroundColor = ColorScheme.get_color(\"bg0\", this.state.theme);\r\n    body.style.boxSizing = \"border-box\";\r\n    body.style.margin = \"0\";\r\n\r\n    for (const key in app_fonts) {\r\n      body.style[key] = app_fonts[key];\r\n    }\r\n\r\n    document.ping_api_location = this.state.ping_api_location;\r\n\r\n    //update pingbursts func\r\n    setInterval(async () => {\r\n      this.update_pingbursts();\r\n      this.update_topology_and_ip_address_info_array();\r\n    }, 1000);\r\n  }\r\n\r\n  async fetch_api_endpoint(endpoint) {\r\n    try {\r\n      let res = await fetch(new URL(endpoint, document.ping_api_location));\r\n      if (!res.ok) {\r\n        throw Error(\"[PING MODULE FETCH] : Received not ok response\");\r\n      }\r\n      return await res.json();\r\n    } catch (error) {\r\n      console.debug(error);\r\n      return {};\r\n    }\r\n  }\r\n\r\n  async update_topology_and_ip_address_info_array() {\r\n    let new_topology = await this.fetch_api_endpoint(\"topology\");\r\n    const areEqual = compareObjects(new_topology, this.state.topology);\r\n    if (areEqual) {\r\n      return;\r\n    }\r\n    this.setState((state) => {\r\n      return produce(state, (draft) => {\r\n        //find diff of ip_addresses\r\n        function calc_diff_ips(old_topology, new_topology) {\r\n          function difference(setA, setB) {\r\n            let _difference = new Set(setA);\r\n            for (let elem of setB) {\r\n              _difference.delete(elem);\r\n            }\r\n            return _difference;\r\n          }\r\n          const old_ips = old_topology.nodes.reduce(\r\n            (ip_set, node) => ip_set.add(node.data.id),\r\n            new Set()\r\n          );\r\n          const new_ips = new_topology.nodes.reduce(\r\n            (ip_set, node) => ip_set.add(node.data.id),\r\n            new Set()\r\n          );\r\n\r\n          let ips_to_add = difference(new_ips, old_ips);\r\n          let ips_to_remove = difference(old_ips, new_ips);\r\n          return {\r\n            ips_to_add,\r\n            ips_to_remove,\r\n          };\r\n        }\r\n\r\n        const { ips_to_add, ips_to_remove } = calc_diff_ips(\r\n          draft.topology,\r\n          new_topology\r\n        );\r\n        let ips_to_add_array = [...ips_to_add];\r\n        //Add new entries to ip_address_info_array\r\n        const ip_address_info_to_add = ips_to_add_array.map(\r\n          (ip_address, index) => {\r\n            const nickname = nickname_generator(this.unique_ips_seen + index);\r\n            return {\r\n              is_selected: false,\r\n              ip_address,\r\n              nickname,\r\n              is_connected: true,\r\n            };\r\n          }\r\n        );\r\n        this.unique_ips_seen += ips_to_add_array.length;\r\n\r\n        draft.ip_address_info_array.push(...ip_address_info_to_add);\r\n        draft.ip_address_info_array = draft.ip_address_info_array.filter(\r\n          (ip_info) => !ips_to_remove.has(ip_info.ip_address)\r\n        );\r\n\r\n        draft.topology = new_topology;\r\n      });\r\n    });\r\n  }\r\n\r\n  async update_pingbursts() {\r\n    let new_pingbursts = await this.fetch_api_endpoint(\"pingbursts\");\r\n    const areEqual = compareObjects(new_pingbursts, this.state.pingbursts);\r\n    if (areEqual) {\r\n      return;\r\n    }\r\n    this.setState((prevState) => {\r\n      const newState = produce(prevState, (draft) => {\r\n        mergeObjectsInPlace(draft.pingbursts, new_pingbursts);\r\n      });\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  ip_selection_handler = (ip, is_selected) => {\r\n    this.setState((state) =>\r\n      produce(state, (draft) => {\r\n        const ip_address_info = draft.ip_address_info_array.find(\r\n          (info) => info.ip_address === ip\r\n        );\r\n        ip_address_info.is_selected = is_selected;\r\n      })\r\n    );\r\n  };\r\n\r\n  change_ping_api_location_handler = (ping_api_location) => {\r\n    document.ping_api_location = ping_api_location;\r\n    this.setState({ ping_api_location });\r\n  };\r\n\r\n  setColorSchemeToCSSVars() {\r\n    const cmap = ColorScheme.color_maps[this.state.theme];\r\n    for (let color in cmap) {\r\n      document.body.style.setProperty(`--${color}`, cmap[color]);\r\n    }\r\n  }\r\n\r\n  setScrollbarToCurrentTheme() {\r\n    let body = document.body;\r\n    if (this.state.theme === THEME.TI) {\r\n      body.style.setProperty(\"--scrollbar_bg\", \"rgba(0,0,0,0.1)\");\r\n      body.style.setProperty(\"--thumb_bg\", \"rgba(0,0,0,0.4)\");\r\n      body.style.setProperty(\"--thumb_bg_hover\", \"rgba(0,0,0,0.6)\");\r\n    } else {\r\n      body.style.setProperty(\"--scrollbar_bg\", ColorScheme.get_color(\"bg0\"));\r\n      body.style.setProperty(\"--thumb_bg\", ColorScheme.get_color(\"bg1\"));\r\n      body.style.setProperty(\"--thumb_bg_hover\", ColorScheme.get_color(\"bg2\"));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let body = document.getElementsByTagName(\"body\")[0];\r\n    body.style.backgroundColor = ColorScheme.get_color(\"bg0\", this.state.theme);\r\n    this.setScrollbarToCurrentTheme();\r\n    this.setColorSchemeToCSSVars();\r\n    const dash_title_container_style = {\r\n      backgroundColor:\r\n        this.state.theme === \"ti\"\r\n          ? ColorScheme.get_color(\"red\", THEME.TI)\r\n          : \"rgba(0,0,0,0)\",\r\n    };\r\n    return (\r\n      <ThemeContext.Provider value={this.state.theme}>\r\n        <div className=\"top_vstack\">\r\n          <div\r\n            className=\"dash_title_container\"\r\n            style={dash_title_container_style}\r\n          >\r\n            <h1 className=\"dash_title\">Your Wi-SUN Network</h1>\r\n            <div\r\n              style={{\r\n                marginRight: \"5.9427vw\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <ThemeToggle\r\n                handle_new_theme={(theme) => this.setState({ theme })}\r\n              />\r\n              <PingJobsButton {...this.state} />\r\n              <SettingsButton\r\n                change_handler={this.change_ping_api_location_handler}\r\n                {...this.state}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"pane_container\">\r\n            <Pane>\r\n              <div className=\"tile_container_full tile_container_common\">\r\n                <Tile title=\"Topology\">\r\n                  <Topology\r\n                    ip_selection_handler={this.ip_selection_handler}\r\n                    ip_address_info_array={this.state.ip_address_info_array}\r\n                    elements={this.state.topology}\r\n                  />\r\n                </Tile>\r\n              </div>\r\n              <div className=\"tile_container_full tile_container_common\">\r\n                <TileHeader title=\"IP Addresses\" />\r\n                <IPAddressTable\r\n                  ip_selection_handler={this.ip_selection_handler}\r\n                  ip_address_info_array={this.state.ip_address_info_array}\r\n                />\r\n              </div>\r\n            </Pane>\r\n            <Pane>\r\n              <div className=\"tile_container_hstack tile_container_common\">\r\n                <div className=\"tile_container_half\">\r\n                  <Tile title=\"Ping Config\">\r\n                    <PingConfig\r\n                      ip_address_info_array={this.state.ip_address_info_array}\r\n                    />\r\n                  </Tile>\r\n                </div>\r\n                <div className=\"tile_container_half\">\r\n                  <Tile title=\"At A Glance\">\r\n                    <AtAGlance {...this.state} />\r\n                  </Tile>\r\n                </div>\r\n              </div>\r\n              <div className=\"tile_container_full tile_container_common\">\r\n                <Monitor {...this.state} />\r\n              </div>\r\n            </Pane>\r\n          </div>\r\n        </div>\r\n      </ThemeContext.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"ping-root\"));\r\n"],"sourceRoot":""}